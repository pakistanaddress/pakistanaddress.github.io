<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2432.htm" />
<title>ES6基础语法之模块化介绍_基础知识 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">ES6基础语法之模块化介绍_基础知识</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<p>ES6 引入了模块化， ES6 的模块化分为导出（export） @与导入（import）两个模块。</p> <p><strong>ES6模块化特点：</strong></p> <p>（1）ES6 的模块自动开启严格模式，不管你有没有在模块头部加上 <strong>use strict;</strong>。</p> <p>（2） 模块中可以导入和导出各种类型的变量，如函数，对象，字符串，数字，布尔值，类等。</p> <p>（3） 每个模块都有自己的上下文，每一个模块内声明的变量都是局部变量，不会污染全局作用域。</p> <p>（4） 每一个模块只加载一次（是单例的）， 若再去加载同目录下同文件，直接从内存中读取。</p> <h2>一、export与import基本使用</h2> <p><strong>export 命令用于导出， import 命令 用于导入：</strong></p> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>test1.js</p> <div class="ay1code"> <pre class="brush:js;">// import { name,sex } from "../export/module1.js";  // console.log(name); //孙悟空  // console.log(sex);  //男  //或导入部分变量  import { sex } from "../export/module1.js";  console.log(sex);  //男</pre> </div> <p>Demo01.html</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;!--       module1.js:模块代码,通过export暴露变量      test1.js:导入module1.js提供的变量      Demo01.html:引入test1.js内容  --&gt;  &lt;script type="module" src="import/test1.js"&gt;&lt;/script&gt;</pre> </div> <h2>二、网页中直接import模块</h2> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>HTML:</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;!DOCTYPE html&gt;  &lt;html&gt;  	&lt;head&gt;  		&lt;meta charset="utf-8"&gt;  		&lt;title&gt;网页中import模块&lt;/title&gt;  	&lt;/head&gt;  	&lt;body&gt;  		&lt;h1&gt;姓名:&lt;span id="spanName"&gt;&lt;/span&gt;&lt;/h1&gt;  		&lt;h1&gt;性别:&lt;span id="spanSex"&gt;&lt;/span&gt;&lt;/h1&gt;  	&lt;/body&gt;  &lt;/html&gt;  &lt;!--    module1.js:模块代码,通过export暴露变量   Demo02.html:导入module1.js提供的变量   --&gt;  &lt;script type="module"&gt;  	import {name,sex} from "./export/module1.js";  	document.getElementById("spanName").innerHTML = name;  	document.getElementById("spanSex").innerHTML = sex;  &lt;/script&gt;</pre> </div> <h2>三、as的使用</h2> <p><strong>（1）as在export中的用法：</strong>变量使用别名,隐藏模块内部的变量</p> <p>module2.js：</p> <div class="ay1code"> <pre class="brush:js;">let name = "孙悟空";  let sex = "男";  export {name as expName,sex as expSex};</pre> </div> <p>HTML:</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;!DOCTYPE html&gt;  &lt;html&gt;  	&lt;head&gt;  		&lt;meta charset="utf-8"&gt;  		&lt;title&gt;as在export中的用法&lt;/title&gt;  	&lt;/head&gt;  	&lt;body&gt;  		&lt;h1&gt;姓名:&lt;span id="spanName"&gt;&lt;/span&gt;&lt;/h1&gt;  		&lt;h1&gt;性别:&lt;span id="spanSex"&gt;&lt;/span&gt;&lt;/h1&gt;  	&lt;/body&gt;  &lt;/html&gt;  &lt;!--    module2.js:模块代码,通过export暴露变量(变量使用别名,隐藏模块内部的变量)   Demo03.html:导入module2.js提供的变量   --&gt;  &lt;script type="module"&gt;  	import {expName,expSex} from "./export/module2.js";  	document.getElementById("spanName").innerHTML = expName;  	document.getElementById("spanSex").innerHTML = expSex;  &lt;/script&gt;</pre> </div> <p><strong>（2）as在import中的用法：</strong>导入多个模块的变量,使用as解决命名冲突。</p> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>module3.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "猪八戒";  let sex = "男";  export {name,sex};</pre> </div> <p>HTML:</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;!DOCTYPE html&gt;  &lt;html&gt;  	&lt;head&gt;  		&lt;meta charset="utf-8"&gt;  		&lt;title&gt;as在import中的用法&lt;/title&gt;  	&lt;/head&gt;  	&lt;body&gt;  		&lt;h1&gt;姓名:&lt;span id="spanName1"&gt;&lt;/span&gt;&lt;/h1&gt;  		&lt;h1&gt;性别:&lt;span id="spanSex1"&gt;&lt;/span&gt;&lt;/h1&gt;  		&lt;hr /&gt;  		&lt;h1&gt;姓名:&lt;span id="spanName2"&gt;&lt;/span&gt;&lt;/h1&gt;  		&lt;h1&gt;性别:&lt;span id="spanSex2"&gt;&lt;/span&gt;&lt;/h1&gt;  	&lt;/body&gt;	  &lt;/html&gt;  &lt;!--    module1.js:模块代码(暴露name,sex)   module3.js:模块代码(暴露name,sex)   Demo04.html:导入两个模块的变量,使用as解决命名冲突   --&gt;  &lt;script type="module"&gt;  	import {name as name1,sex as sex1} from "./export/module1.js";  	import {name as name2,sex as sex2} from "./export/module3.js";  	document.getElementById("spanName1").innerHTML = name1;  	document.getElementById("spanSex1").innerHTML = sex1;  	document.getElementById("spanName2").innerHTML = name2;  	document.getElementById("spanSex2").innerHTML = sex2;  &lt;/script&gt;</pre> </div> <h2>四、导入模块中的函数和类</h2> <h3>（1）导入模块中的函数</h3> <p>module4.js</p> <div class="ay1code"> <pre class="brush:js;">// function Add(...items)  // {  // 	let sum = 0;  // 	for(let item of items)  // 	{  // 		sum += item;  // 	}  // 	return sum;  // }  // export{Add};  //或  export function Add(...items)  {  	let sum = 0;  	for(let item of items)  	{  		sum += item;  	}  	return sum;  };</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:js;">&lt;script type="module"&gt;  	//导入函数  	import {Add} from './export/module4.js';  	let result = Add(1,2,3,4,5);  	console.log(result); //15  &lt;/script&gt;</pre> </div> <h3>（2）导入模块中的类：</h3> <p>module4.js</p> <div class="ay1code"> <pre class="brush:js;">// class Student  // {  // 	constructor(stuno,stuname)   // 	{  // 		this.stuno = stuno;  // 		this.stuname = stuname;  // 	}  // 	sayHi()  // 	{  // 		console.log("大家好,我是"+this.stuname+",我的学号是"+this.stuno);  // 	}  // }  // export {Student};  //或  export class Student  {  	constructor(stuno,stuname)   	{  		this.stuno = stuno;  		this.stuname = stuname;  	}  	sayHi()  	{  		console.log("大家好,我是"+this.stuname+",我的学号是"+this.stuno);  	}  }</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//导入类  	import {Student} from './export/module4.js';  	let stu = new Student("001","孙悟空");  	stu.sayHi();  &lt;/script&gt;</pre> </div> <h2>五、import的特点</h2> <p>module5.js</p> <div class="ay1code"> <pre class="brush:js;">let name = "孙悟空";  let sex = "男";  let emp = {name:"孙悟空",sex:"男"};  export {name,sex,emp};</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//只读特点  	//import {name,sex,emp} from './export/module5.js';  	//(1)普通类型的值不能改变  	// name = "猪八戒"; //报错  	// sex = "男";//报错  	//(2)不能直接改变对象  	//emp = {name:"猪八戒",sex:"男"};  	//(3)可以改变变量的属性值  	// emp.name = "猪八戒";  	// emp.sex = "男";  	  	//单例特点  	//(1)下面两句import只会执行一次  	//import {name,sex,emp} from './export/module5.js';  	//import {name,sex,emp} from './export/module5.js';  	//(2)下面两句import相当于 import {name,sex} from './export/module5.js';  	// import {name} from './export/module5.js';  	// import {sex} from './export/module5.js';  	  	//静态特点  	//(1)不支持表达式  	//import {"na"+"me"} from './export/module5.js'; //报错  	//(2)不支持动态导入,以下代码也会报错  	// if(true)  	// 	import {name,sex} from './export/module5.js';  	// else  	// 	import {emp} from './export/module5.js';	  &lt;/script&gt;</pre> </div> <h2>六、模块的整体import加载</h2> <p>module5.js</p> <div class="ay1code"> <pre class="brush:js;">let name = "孙悟空";  let sex = "男";  let emp = {name:"孙悟空",sex:"男"};  export {name,sex,emp};</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//加载module5中所有暴露出来的内容  	import * as test from './export/module5.js';  	console.log(test.name);  	console.log(test.emp.name);  &lt;/script&gt;</pre> </div> <h2>七、export default命令</h2> <p>使用import命令的时候，用户需要知道所要加载的变量名或函数名，否则无法加载，export default 向外暴露的</p> <p>成员，可以使用任意变量来接收，解决上述问题。</p> <p><strong>export default 命令特点:</strong></p> <p>（1）在一个文件或模块中，export、import 可以有多个，export default 仅有一个。</p> <p>（2）export default 中的 default 是对应的导出接口变量。</p> <p>（3）导入导出不需要{}符号。</p> <p>（4）export default 向外暴露的成员，可以使用任意变量来接收。</p> <h3>（1）export default导出变量</h3> <p>module6.js</p> <div class="ay1code"> <pre class="brush:js;">//export default导出变量不需要var    //export var a = 10; // 正确    // 正确  var a = 10;  export default a;    // 错误  //export default var a = 10;</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//接受默认变量  	import b from './export/module6.js'; //此处可以用任意变量(b)来接受  	console.log(b);  &lt;/script&gt;</pre> </div> <h3>（2）export default导出函数</h3> <p>module6.js</p> <div class="ay1code"> <pre class="brush:js;">function Add(...items)  {  	let sum = 0;  	for(let item of items)  	{  		sum += item;  	}  	return sum;  }  //此处Add不需要{}  export default Add</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//接受默认函数  	import sum from './export/module6.js'; //此处可以用任意变量(sum)来接受  	let result = sum(1,2,3,4,5);  	console.log(result);  &lt;/script&gt;</pre> </div> <h2>八、export与import的复合写法</h2> <p>export 与 import 可以在同一模块使用，我们称为复合使用。</p> <h3>（1）复合使用的基本语法</h3> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>module7.js</p> <div class="ay1code"> <pre class="brush:js;">//复合使用的语法  let emp = {name:"猪八戒",sex:"男"};    export { name, sex } from './module1.js';  // //上面的export等于如下：  // // import { name, sex } from './module1.js';  // // export { name, sex };    export {emp}</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//导入module7,在module7中导出module1内容  	import {name,sex,emp} from "./export/module7.js";  	console.log(name);  	console.log(emp.name);  &lt;/script&gt;</pre> </div> <h3>（2）复合写法实现接口改名</h3> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>module7.js</p> <div class="ay1code"> <pre class="brush:js;">//复合写法实现接口改名  let emp = {name:"猪八戒",sex:"男"};  export { name as myname, sex as mysex } from './module1.js';  export {emp}</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//导入改名后的变量  	// import {myname,mysex,emp} from "./export/module7.js";  	// console.log(myname);  	// console.log(emp.name);	  &lt;/script&gt;</pre> </div> <h3>（3）转换为默认接口</h3> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>module7.js</p> <div class="ay1code"> <pre class="brush:js;">// 转换为默认接口  let emp = {name:"猪八戒",sex:"男"};  export {name as default,sex} from './module1.js';  export {emp}</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//导入修改成默认接口的name,使用abc接收  	import abc from "./export/module7.js";  	import {sex,emp} from "./export/module7.js";  	console.log(abc);  	console.log(emp.name);  &lt;/script&gt;</pre> </div> <h3>（4）默认接口转换为命名接口</h3> <p>module6.js</p> <div class="ay1code"> <pre class="brush:js;">function Add(...items)  {  	let sum = 0;  	for(let item of items)  	{  		sum += item;  	}  	return sum;  }  //此处Add不需要{}  export default Add</pre> </div> <p>module7.js</p> <div class="ay1code"> <pre class="brush:js;">//将默认接口转换为命名接口  export {default as sum} from './module6.js';</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//导入默认接口转换成的sum接口  	import {sum} from "./export/module7.js";  	let result = sum(1,2,3,4,5);  	console.log(result);  &lt;/script&gt;</pre> </div> <h3>（5）导出所有接口</h3> <p>module1.js</p> <div class="ay1code"> <pre class="brush:js;">// export let name = "孙悟空";  // export let sex = "男";  //或  let name = "孙悟空";  let sex = "男";  export {name,sex};</pre> </div> <p>module7.js</p> <div class="ay1code"> <pre class="brush:js;">//导出所有  export * from './module1.js'</pre> </div> <p>HTML</p> <div class="ay1code"> <pre class="brush:xhtml;">&lt;script type="module"&gt;  	//接收导出的所有接口  	import {name,sex} from "./export/module7.js";  	console.log(name);  	console.log(sex);  &lt;/script&gt;</pre> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2431.htm">spring中jdbcTemplate.batchUpdate的几种使用情况_java</a></p>
                                        <p>下一个：<a href="/html/category/article-2433.htm">在K8s上部署Redis 集群</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4565.htm" title="吉泰连锁酒店官网 吉泰连锁酒店官网电话">吉泰连锁酒店官网 吉泰连锁酒店官网电话</a></li>
                        <li class="py-2"><a href="/html/category/article-6907.htm" title="动物疫苗有哪些大厂家打的呢多少钱（动物疫苗哪个好）">动物疫苗有哪些大厂家打的呢多少钱（动物疫苗哪个好）</a></li>
                        <li class="py-2"><a href="/html/category/article-4495.htm" title="动物疫苗企业名单公布查询官网（动物疫苗市场规模）">动物疫苗企业名单公布查询官网（动物疫苗市场规模）</a></li>
                        <li class="py-2"><a href="/html/category/article-6077.htm" title="宠物店寄养合同有用吗（宠物店寄养合同范本）">宠物店寄养合同有用吗（宠物店寄养合同范本）</a></li>
                        <li class="py-2"><a href="/html/category/article-7367.htm" title="自动挡不踩油门车速会降低吗（油门踩下去提不起车速）">自动挡不踩油门车速会降低吗（油门踩下去提不起车速）</a></li>
                        <li class="py-2"><a href="/html/category/article-6953.htm" title="青浦二中2021高考成绩如何（青浦二中2021高考成绩如何啊）">青浦二中2021高考成绩如何（青浦二中2021高考成绩如何啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-6768.htm" title="动物疫苗价格查询官网入口网址是什么（动物疫苗的正确使用方法）">动物疫苗价格查询官网入口网址是什么（动物疫苗的正确使用方法）</a></li>
                        <li class="py-2"><a href="/html/category/article-6120.htm" title="国内十大毒猫粮（2019中国十大毒猫粮）">国内十大毒猫粮（2019中国十大毒猫粮）</a></li>
                        <li class="py-2"><a href="/html/category/article-7044.htm" title="动物疫苗审批管理办法最新（动物疫苗销售许可证如何办理）">动物疫苗审批管理办法最新（动物疫苗销售许可证如何办理）</a></li>
                        <li class="py-2"><a href="/html/category/article-7183.htm" title="2020年开宠物店怎么样（2020年开宠物店怎么样了）">2020年开宠物店怎么样（2020年开宠物店怎么样了）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">14</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>