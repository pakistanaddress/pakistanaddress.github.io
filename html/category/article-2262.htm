<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2262.htm" />
<title>C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<h2 data-tool="mdnice编辑器">--概述</h2> <p>这个项目演示了如何在WPF中使用各种Prism功能的示例。如果您刚刚开始使用Prism，建议您从第一个示例开始，按顺序从列表中开始。每个示例都基于前一个示例的概念。</p> <p>此项目平台框架：.NET Core 3.1</p> <p>Prism版本：8.0.0.1909</p> <p>提示：这些项目都在同一解决方法下，需要依次打开运行，可以选中项目-》右键-》设置启动项目，然后运行：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a26708ff24b53da5651d453b83322cbe.jpg" alt="C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism"></p> <h2 data-tool="mdnice编辑器">目录介绍</h2> <table style="width: 523px; height: 663px" cellspacing="0" cellpadding="0"> <colgroup> <col width="298"> <col width="400"></colgroup> <tbody> <tr> <td width="223" height="17">Topic</td> <td width="300">描述</td> </tr> <tr> <td width="223" height="17">Bootstrapper and the Shell</td> <td>创建一个基本的引导程序和shell</td> </tr> <tr> <td width="223" height="17">Regions</td> <td>创建一个区域</td> </tr> <tr> <td width="223" height="17">Custom Region Adapter</td> <td width="300">为StackPanel创建自定义区域适配器</td> </tr> <tr> <td width="223" height="17">View Discovery</td> <td width="300">使用视图发现自动注入视图</td> </tr> <tr> <td width="223" height="17">View Injection</td> <td width="300">使用视图注入手动添加和删除视图</td> </tr> <tr> <td width="223" height="17">View Activation/Deactivation</td> <td width="300">手动激活和停用视图</td> </tr> <tr> <td width="223" height="17">Modules with App.config</td> <td width="300">使用应用加载模块。配置文件</td> </tr> <tr> <td width="223" height="17">Modules with Code</td> <td width="300">使用代码加载模块</td> </tr> <tr> <td width="223" height="17">Modules with Directory</td> <td width="300">从目录加载模块</td> </tr> <tr> <td width="223" height="17">Modules loaded manually</td> <td width="300">使用IModuleManager手动加载模块</td> </tr> <tr> <td width="223" height="17">ViewModelLocator</td> <td width="300">使用ViewModelLocator</td> </tr> <tr> <td width="223" height="17">ViewModelLocator - Change Convention</td> <td width="300">更改ViewModelLocator命名约定</td> </tr> <tr> <td width="223" height="17">ViewModelLocator - Custom Registrations</td> <td width="300">为特定视图手动注册ViewModels</td> </tr> <tr> <td width="223" height="17">DelegateCommand</td> <td width="300">使用DelegateCommand和DelegateCommand&lt;T&gt;</td> </tr> <tr> <td width="223" height="31">CompositeCommands</td> <td width="300">了解如何使用CompositeCommands作为单个命令调用多个命令</td> </tr> <tr> <td width="223" height="17">IActiveAware Commands</td> <td width="300">使您的命令IActiveAware仅调用激活的命令</td> </tr> <tr> <td width="223" height="17">Event Aggregator</td> <td width="300">使用IEventAggregator</td> </tr> <tr> <td width="223" height="17">Event Aggregator - Filter Events</td> <td width="300">订阅事件时筛选事件</td> </tr> <tr> <td width="223" height="17">RegionContext</td> <td width="300">使用RegionContext将数据传递到嵌套区域</td> </tr> <tr> <td width="223" height="17">Region Navigation</td> <td width="300">请参见如何实现基本区域导航</td> </tr> <tr> <td width="223" height="17">Navigation Callback</td> <td width="300">导航完成后获取通知</td> </tr> <tr> <td width="223" height="17">Navigation Participation</td> <td width="300">通过INavigationAware了解视图和视图模型导航参与</td> </tr> <tr> <td width="223" height="17">Navigate to existing Views</td> <td width="300">导航期间控制视图实例</td> </tr> <tr> <td width="223" height="17">Passing Parameters</td> <td width="300">将参数从视图/视图模型传递到另一个视图/视图模型</td> </tr> <tr> <td width="223" height="17">Confirm/cancel Navigation</td> <td width="300">使用IConfirmNavigationReqest界面确认或取消导航</td> </tr> <tr> <td width="223" height="17">Controlling View lifetime</td> <td width="300">使用IRegionMemberLifetime自动从内存中删除视图</td> </tr> <tr> <td width="223" height="17">Navigation Journal</td> <td width="300">了解如何使用导航日志</td> </tr> </tbody> </table> <h2 data-tool="mdnice编辑器">部分项目演示和介绍</h2> <p><strong>① BootstrapperShell启动界面：</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e2af8094356316eaa6cc28832ca74f49.jpg" alt="C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism"></p> <p>这个主要演示Prism框架搭建的用法：</p> <p>step1：在nuget上引用Prsim.Unity</p> <p>step2：修改App.xaml：设置引导程序</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">&lt;Application x:Class="BootstrapperShell.App"              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"              xmlns:local="clr-namespace:BootstrapperShell"&gt;     &lt;Application.Resources&gt;               &lt;/Application.Resources&gt; &lt;/Application&gt;</pre> </div> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">public partial class App : Application     {         protected override void OnStartup(StartupEventArgs e)         {             base.OnStartup(e);              var bootstrapper = new Bootstrapper();             bootstrapper.Run();         }     }</pre> </div> <p>　　step3：在引导程序中设置启动项目：</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">using Unity; using Prism.Unity; using BootstrapperShell.Views; using System.Windows; using Prism.Ioc;  namespace BootstrapperShell {     class Bootstrapper : PrismBootstrapper     {         protected override DependencyObject CreateShell()         {             return Container.Resolve&lt;MainWindow&gt;();         }          protected override void RegisterTypes(IContainerRegistry containerRegistry)         {                      }     } }</pre> </div> <p>　　step4：在MainWindow.xaml中显示个字符串</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">&lt;Window x:Class="BootstrapperShell.Views.MainWindow"         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"         Title="Shell" Height="350" Width="525"&gt;     &lt;Grid&gt;         &lt;ContentControl Content="Hello from Prism"  /&gt;     &lt;/Grid&gt; &lt;/Window&gt;</pre> </div> <p>　　②ViewInjection：视图注册</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/28ec3a8e1198b17f53eda3109aaa05a6.jpg" alt="C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism"></p> <p>MainWindow.xaml：通过<span class="code-snippet__name">ContentControl 关联视图</span></p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">&lt;Window x:Class="ViewInjection.Views.MainWindow"         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"         xmlns:prism="http://prismlibrary.com/"         Title="Shell" Height="350" Width="525"&gt;     &lt;DockPanel LastChildFill="True"&gt;         &lt;Button DockPanel.Dock="Top" Click="Button_Click"&gt;Add View&lt;/Button&gt;         &lt;ContentControl prism:RegionManager.RegionName="ContentRegion" /&gt;     &lt;/DockPanel&gt; &lt;/Window&gt;</pre> </div> <p>　　MainWindow.xaml.cs：鼠标点击后通过IRegion 接口注册视图</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;"> public partial class MainWindow : Window     {         IContainerExtension _container;         IRegionManager _regionManager;          public MainWindow(IContainerExtension container, IRegionManager regionManager)         {             InitializeComponent();             _container = container;             _regionManager = regionManager;         }          private void Button_Click(object sender, RoutedEventArgs e)         {             var view = _container.Resolve&lt;ViewA&gt;();             IRegion region = _regionManager.Regions["ContentRegion"];             region.Add(view);         }     }</pre> </div> <p>　　③ActivationDeactivation：视图激活和注销</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/98a5fcd7e6d9a164e758fa370097b91e.jpg" alt="C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism"></p> <p>MainWindow.xaml.cs：这里在窗体构造函数中注入了一个容器扩展接口和一个regin管理器接口，分别用来装载视图和注册regin，窗体的激活和去激活分别通过regions的Activate和Deactivate方法实现</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">public partial class MainWindow : Window     {         IContainerExtension _container;         IRegionManager _regionManager;         IRegion _region;          ViewA _viewA;         ViewB _viewB;          public MainWindow(IContainerExtension container, IRegionManager regionManager)         {             InitializeComponent();             _container = container;             _regionManager = regionManager;              this.Loaded += MainWindow_Loaded;         }          private void MainWindow_Loaded(object sender, RoutedEventArgs e)         {             _viewA = _container.Resolve&lt;ViewA&gt;();             _viewB = _container.Resolve&lt;ViewB&gt;();              _region = _regionManager.Regions["ContentRegion"];              _region.Add(_viewA);             _region.Add(_viewB);         }          private void Button_Click(object sender, RoutedEventArgs e)         {             //activate view a             _region.Activate(_viewA);         }          private void Button_Click_1(object sender, RoutedEventArgs e)         {             //deactivate view a             _region.Deactivate(_viewA);         }          private void Button_Click_2(object sender, RoutedEventArgs e)         {             //activate view b             _region.Activate(_viewB);         }          private void Button_Click_3(object sender, RoutedEventArgs e)         {             //deactivate view b             _region.Deactivate(_viewB);         }     }</pre> </div> <p>　　④UsingEventAggregator：事件发布订阅</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cc2c9dc9bccec0700f8a6d4551c7fbc8.jpg" alt="C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism"></p> <p>事件类定义：</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">public class MessageSentEvent : PubSubEvent&lt;string&gt;     {     }</pre> </div> <p>　　注册两个组件：ModuleA和ModuleB</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;"> protected override void ConfigureModuleCatalog(IModuleCatalog moduleCatalog)         {             moduleCatalog.AddModule&lt;ModuleA.ModuleAModule&gt;();             moduleCatalog.AddModule&lt;ModuleB.ModuleBModule&gt;();         }</pre> </div> <p><span class="code-snippet__title">ModuleAModule 中注册视图MessageView</span></p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;"> public class ModuleAModule : IModule     {         public void OnInitialized(IContainerProvider containerProvider)         {             var regionManager = containerProvider.Resolve&lt;IRegionManager&gt;();             regionManager.RegisterViewWithRegion("LeftRegion", typeof(MessageView));         }          public void RegisterTypes(IContainerRegistry containerRegistry)         {                      }     }</pre> </div> <p>　　MessageView.xaml：视图中给button俺妞妞绑定命令</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">&lt;UserControl x:Class="ModuleA.Views.MessageView"              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"              xmlns:prism="http://prismlibrary.com/"                           prism:ViewModelLocator.AutoWireViewModel="True" Padding="25"&gt;     &lt;StackPanel&gt;         &lt;TextBox Text="{Binding Message}" Margin="5"/&gt;         &lt;Button Command="{Binding SendMessageCommand}" Content="Send Message" Margin="5"/&gt;     &lt;/StackPanel&gt; &lt;/UserControl&gt;</pre> </div> <p>　　MessageViewModel.cs：在vm中把界面绑定的命令委托给SendMessage，然后在方法SendMessage中发布消息：</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">using Prism.Commands; using Prism.Events; using Prism.Mvvm; using UsingEventAggregator.Core;  namespace ModuleA.ViewModels {     public class MessageViewModel : BindableBase     {         IEventAggregator _ea;          private string _message = "Message to Send";         public string Message         {             get { return _message; }             set { SetProperty(ref _message, value); }         }          public DelegateCommand SendMessageCommand { get; private set; }          public MessageViewModel(IEventAggregator ea)         {             _ea = ea;             SendMessageCommand = new DelegateCommand(SendMessage);         }          private void SendMessage()         {             _ea.GetEvent&lt;MessageSentEvent&gt;().Publish(Message);         }     } }</pre> </div> <p><span class="code-snippet__title">在MessageListViewModel 中接收并显示接收到的消息：</span></p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;"> public class MessageListViewModel : BindableBase     {         IEventAggregator _ea;          private ObservableCollection&lt;string&gt; _messages;         public ObservableCollection&lt;string&gt; Messages         {             get { return _messages; }             set { SetProperty(ref _messages, value); }         }          public MessageListViewModel(IEventAggregator ea)         {             _ea = ea;             Messages = new ObservableCollection&lt;string&gt;();              _ea.GetEvent&lt;MessageSentEvent&gt;().Subscribe(MessageReceived);         }          private void MessageReceived(string message)         {             Messages.Add(message);         }     }</pre> </div> <p>以上就是这个开源项目比较经典的几个入门实例，其它就不展开讲解了，有兴趣的可以下载源码自己阅读学习。</p> <h2 data-tool="mdnice编辑器">源码下载</h2> <p>github访问速度较慢，所以我下载了一份放到的百度网盘</p> <p>百度网盘链接：https://pan.baidu.com/s/10Gyks2w-R4B_3z9Jj5mRcA</p> <p>提取码：0000</p> <p>---------------------------------------------------------------------</p> <p>开源项目链接：https://github.com/PrismLibrary/Prism-Samples-Wpf</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2261.htm">kubectl 远程访问内网中的 kubernetes 集群</a></p>
                                        <p>下一个：<a href="/html/category/article-2263.htm">mysql数据库中将查询出来的数据批量更新到另外一张表里面</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-5945.htm" title="正宗国产车有哪些牌子(巅峰极速国产车有哪些牌子)">正宗国产车有哪些牌子(巅峰极速国产车有哪些牌子)</a></li>
                        <li class="py-2"><a href="/html/category/article-6676.htm" title="车险哪个品牌好(车险哪个品牌好一些)">车险哪个品牌好(车险哪个品牌好一些)</a></li>
                        <li class="py-2"><a href="/html/category/article-4530.htm" title="一片枫叶的拼音怎么写呀怎么组词啊（一片枫叶的拼音怎么写呀怎么组词啊）">一片枫叶的拼音怎么写呀怎么组词啊（一片枫叶的拼音怎么写呀怎么组词啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-5586.htm" title="4月11日（星期二）CCTV8节目预告(4月11日星期二早安的视频)">4月11日（星期二）CCTV8节目预告(4月11日星期二早安的视频)</a></li>
                        <li class="py-2"><a href="/html/category/article-6014.htm" title="国内宠物粮上市公司有哪些公司（宠物主粮上市公司）">国内宠物粮上市公司有哪些公司（宠物主粮上市公司）</a></li>
                        <li class="py-2"><a href="/html/category/article-7090.htm" title="花鼠明星俱乐部（花鼠能长多大）">花鼠明星俱乐部（花鼠能长多大）</a></li>
                        <li class="py-2"><a href="/html/category/article-4309.htm" title="蜜雪加盟一般多少钱镇上（蜜雪加盟需要多少钱）">蜜雪加盟一般多少钱镇上（蜜雪加盟需要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-6768.htm" title="动物疫苗价格查询官网入口网址是什么（动物疫苗的正确使用方法）">动物疫苗价格查询官网入口网址是什么（动物疫苗的正确使用方法）</a></li>
                        <li class="py-2"><a href="/html/category/article-6815.htm" title="靳东个人资料简介简历（山楂树之恋演员）速看，">靳东个人资料简介简历（山楂树之恋演员）速看，</a></li>
                        <li class="py-2"><a href="/html/category/article-4565.htm" title="吉泰连锁酒店官网 吉泰连锁酒店官网电话">吉泰连锁酒店官网 吉泰连锁酒店官网电话</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>