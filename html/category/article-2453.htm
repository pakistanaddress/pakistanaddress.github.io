<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2453.htm" />
<title>CSS预编译器_在线工具 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">CSS预编译器_在线工具</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<p><span style="font-size: 18pt"><strong>零.CSS预编译器</strong></span></p> <p style="margin-left: 30px"><span style="font-size: 14px">CSS预处理器是指对生成CSS前的某一语法的处理。CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，供项目使用</span></p> <p style="margin-left: 30px"><span style="font-size: 14px">CSS预处理器为CSS增加一些编程的特性，如增加了规则、变量、混入、选择器、继承等等特性，无需考虑游览器的兼容性问题</span></p> <p style="margin-left: 30px"><span style="font-size: 14px">&nbsp;有助于更好地组织管理样式文件，以及更高效地开发项目</span></p> <p style="margin-left: 30px"><span style="font-size: 14px">下面介绍主流的CSS预编译器三剑客：</span></p> <p><span style="font-size: 18pt"><strong>一. CSS预编译器三剑客（Sass、Less、Stylus)</strong></span></p> <p><span><span style="font-size: 16px"><strong>Sass</strong>：<span style="font-size: 14px">Sass</span></span>包括两套语法。最开始的语法叫做"缩进语法"，使用缩进来区分代码块，并且用回车将不同规则分隔开（不使用{}和；）。</span></p> <p><span>　　而新的语法叫做“SCSS”，使用和CSS类似的块语法，使用大括号将不同的规则分开，分号将具体的样式分开。这两套语法通过.sass和.scss两个文件扩展名区分开</span></p> <p><span style="font-size: 16px"><strong>1.使用：</strong></span></p> <p><span>通过VSCode安装Live Sass Compiler插件等方法...</span></p> <p><span style="font-size: 16px"><strong>2.CSS功能扩展：</strong></span></p> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.1：嵌套规则</strong></span></p> <p style="margin-left: 90px"><span>Sass 允许将一套 CSS 样式嵌套进另一套样式中，内层的样式将它外层的选择器作为父选择器，例如：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 97%</span>;<span style="color: rgba(255, 0, 0, 1)">    p, div {     font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 2em</span>;<span style="color: rgba(255, 0, 0, 1)">     a { font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>; }<span style="color: rgba(128, 0, 0, 1)">   }    pre</span>{<span style="color: rgba(255, 0, 0, 1)"> font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 3em</span>; }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 90px"><span>嵌套功能避免了重复输入父选择器，而且令复杂的 CSS 结构更易于管理，编译后：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 97%</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main p, #main div</span>{<span style="color: rgba(255, 0, 0, 1)">     font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 2em</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main p a, #main div a</span>{<span style="color: rgba(255, 0, 0, 1)">       font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main pre</span>{<span style="color: rgba(255, 0, 0, 1)">     font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 3em</span>;  }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.2：父选择器&amp;</strong></span></p> <p style="margin-left: 90px"><span>在使用2.1嵌套规则时，有时也需要使用嵌套外层的父选择器，例如，给某个元素设定hover样式时</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">a</span>{<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">   text-decoration</span>:<span style="color: rgba(0, 0, 255, 1)"> none</span>;<span style="color: rgba(255, 0, 0, 1)">   &amp;</span>:<span style="color: rgba(0, 0, 255, 1)">hover { text-decoration: underline</span>; }<span style="color: rgba(128, 0, 0, 1)">   body.firefox &amp;</span>{<span style="color: rgba(255, 0, 0, 1)"> font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> normal</span>; }<span style="color: rgba(128, 0, 0, 1)"> }  #main</span>{<span style="color: rgba(255, 0, 0, 1)">   color</span>:<span style="color: rgba(0, 0, 255, 1)"> black</span>;<span style="color: rgba(255, 0, 0, 1)">   a {     font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">     &amp;</span>:<span style="color: rgba(0, 0, 255, 1)">hover { color: red</span>; }<span style="color: rgba(128, 0, 0, 1)">   } }</span></pre> </div> <p style="margin-left: 90px"><span>编译后：CSS 文件中&amp;将被替换成嵌套外层的父选择器，如果含有多层嵌套，最外层的父选择器会一层一层向下传递</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">a</span>{<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">   text-decoration</span>:<span style="color: rgba(0, 0, 255, 1)"> none</span>;  }<span style="color: rgba(128, 0, 0, 1)"> a:hover</span>{<span style="color: rgba(255, 0, 0, 1)">     text-decoration</span>:<span style="color: rgba(0, 0, 255, 1)"> underline</span>;  }<span style="color: rgba(128, 0, 0, 1)"> body.firefox a</span>{<span style="color: rgba(255, 0, 0, 1)">     font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> normal</span>;  }<span style="color: rgba(128, 0, 0, 1)">  #main</span>{<span style="color: rgba(255, 0, 0, 1)">   color</span>:<span style="color: rgba(0, 0, 255, 1)"> black</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main a</span>{<span style="color: rgba(255, 0, 0, 1)">     font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main a:hover</span>{<span style="color: rgba(255, 0, 0, 1)">       color</span>:<span style="color: rgba(0, 0, 255, 1)"> red</span>;  }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.3：属性嵌套</strong></span></p> <p style="margin-left: 90px"><span>个别 CSS 属性遵循相同的命名空间 (namespace)，比如<code>font-family, font-size, font-weight</code>&nbsp;都以<code>font</code>&nbsp;作为属性的命名<span>空间。</span></span></p> <p style="margin-left: 90px"><span>为了便于管理这样的属性，同时也为了避免了重复输入，Sass 允许将属性嵌套在命名空间中，例如：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.funky</span>{<span style="color: rgba(255, 0, 0, 1)">   font</span>:<span style="color: rgba(0, 0, 255, 1)"> {     family: fantasy</span>;<span style="color: rgba(255, 0, 0, 1)">     size</span>:<span style="color: rgba(0, 0, 255, 1)"> 30em</span>;<span style="color: rgba(255, 0, 0, 1)">     weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;   }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 60px"><strong></strong><span>编译为：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.funky</span>{<span style="color: rgba(255, 0, 0, 1)">   font-family</span>:<span style="color: rgba(0, 0, 255, 1)"> fantasy</span>;<span style="color: rgba(255, 0, 0, 1)">   font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 30em</span>;<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;  }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.4：变量$</strong></span></p> <p style="margin-left: 90px">Sass最普遍的用法就是变量，以$开头，复制与css属性写法一样，直接调用即可</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">$width: 100px   #main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>; }</pre> </div> <p style="margin-left: 90px"><span>变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），不在嵌套规则内定义的变量则可在任何地方使用</span></p> <p style="margin-left: 90px"><span>（全局变量）</span></p> <p style="margin-left: 90px"><span>将局部变量转换为全局变量可以添加<code>!global</code>&nbsp;声明：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   $width</span>:<span style="color: rgba(0, 0, 255, 1)"> 5em !global</span>;<span style="color: rgba(255, 0, 0, 1)">//局部变量转全局变量   width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>; }<span style="color: rgba(128, 0, 0, 1)">  #sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>; }</pre> </div> <p style="margin-left: 90px"><span>编译为:</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 5em</span>; }<span style="color: rgba(128, 0, 0, 1)">  #sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 5em</span>; }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.5：运算</strong></span></p> <p style="margin-left: 90px"><span>所有数据类型均支持 == 或 != ,此外，每种数据类型也有各自支持的运算方式</span></p> <p style="margin-left: 90px">目前感觉这个运算用处不大，但今后遇到某个项目也可能会用到</p> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.6：@-Rules与指令</strong></span></p> <p style="margin-left: 90px"><span><strong>2.6.1：</strong>Sass 拓展了<code>@import</code>&nbsp;的功能，允许其导入 SCSS 或 Sass 文件，被导入的文件将合并编译到同一个 CSS 文件中，</span></p> <p style="margin-left: 90px"><span>另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">@import "foo.scss";  @import "foo";</span></pre> </div> <p style="margin-left: 90px"><span>都会导入文件foo.scss</span></p> <p style="margin-left: 90px">如果需要导入SCSS或者Sass文件，但不希望编译成CSS文件，在文件名前添加下划线即可</p> <p style="margin-left: 90px">例如，将文件命名为&nbsp;_colors.scss，便不会编译成_colors.css&nbsp;文件。</p> <p style="margin-left: 90px"><strong>2.6.2：</strong><span>Sass 中 @media 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套</span></p> <p style="margin-left: 90px"><span>如果&nbsp;@media&nbsp;嵌套在 CSS 规则内，编译时，&nbsp;@media&nbsp;将被编译到文件的最外层，包含嵌套的父选择器</span></p> <p style="margin-left: 90px"><span>这个功能让&nbsp;@media&nbsp;用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程</span></p> <p style="margin-left: 90px">@media<span>可以使用 Sass（比如变量，函数，以及运算符）代替条件的名称或者值：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 300px</span>;<span style="color: rgba(255, 0, 0, 1)">   @media screen and (orientation</span>:<span style="color: rgba(0, 0, 255, 1)"> landscape) {     width: 500px</span>;   }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 90px"><span>编译为：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 300px</span>;  }<span style="color: rgba(128, 0, 0, 1)"> @media screen and (orientation: landscape)</span>{<span style="color: rgba(255, 0, 0, 1)">     .sidebar {       width</span>:<span style="color: rgba(0, 0, 255, 1)"> 500px</span>;      }<span style="color: rgba(128, 0, 0, 1)">  }</span></pre> </div> <p style="margin-left: 90px"><strong>2.6.3：</strong>@extend&nbsp;，告诉 Sass 将一个选择器下的所有样式继承给另一个选择器。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.error</span>{<span style="color: rgba(255, 0, 0, 1)">   border</span>:<span style="color: rgba(0, 0, 255, 1)"> 1px #f00</span>;<span style="color: rgba(255, 0, 0, 1)">   background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> #fdd</span>; }<span style="color: rgba(128, 0, 0, 1)"> .seriousError</span>{<span style="color: rgba(255, 0, 0, 1)">   @extend .error;   border-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 3px</span>; }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.7：Mixin</strong></span></p> <p style="margin-left: 90px"><span>Mixin用于定义可重复使用的样式，避免了使用无语意的 class，比如.float-left<br /></span></p> <p style="margin-left: 90px"><span>混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式</span></p> <p style="margin-left: 90px"><span>混合样式中也可以包含其他混合样式</span></p> <p style="margin-left: 90px"><strong>2.7.1：定义Mixin</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">@mixin large-text</span>{<span style="color: rgba(255, 0, 0, 1)">   font</span>:<span style="color: rgba(0, 0, 255, 1)"> {     family: Arial</span>;<span style="color: rgba(255, 0, 0, 1)">     size</span>:<span style="color: rgba(0, 0, 255, 1)"> 20px</span>;<span style="color: rgba(255, 0, 0, 1)">     weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;   }<span style="color: rgba(128, 0, 0, 1)">   color: #ff0000;   &amp;:after</span>{<span style="color: rgba(255, 0, 0, 1)">     content</span>:<span style="color: rgba(0, 0, 255, 1)"> "."</span>;<span style="color: rgba(255, 0, 0, 1)">     display</span>:<span style="color: rgba(0, 0, 255, 1)"> block</span>;<span style="color: rgba(255, 0, 0, 1)">     height</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)">     clear</span>:<span style="color: rgba(0, 0, 255, 1)"> both</span>;<span style="color: rgba(255, 0, 0, 1)">     visibility</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;   }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 90px"><strong>2.7.2：引用Mixin</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.page-title</span>{<span style="color: rgba(255, 0, 0, 1)">   @include large-text;   padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 4px</span>;<span style="color: rgba(255, 0, 0, 1)">   margin-top</span>:<span style="color: rgba(0, 0, 255, 1)"> 10px</span>; }</pre> </div> <p style="margin-left: 90px"><span>编译为：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.page-title</span>{<span style="color: rgba(255, 0, 0, 1)">   font-family</span>:<span style="color: rgba(0, 0, 255, 1)"> Arial</span>;<span style="color: rgba(255, 0, 0, 1)">   font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 20px</span>;<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">   color</span>:<span style="color: rgba(0, 0, 255, 1)"> #ff0000</span>;<span style="color: rgba(255, 0, 0, 1)">   padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 4px</span>;<span style="color: rgba(255, 0, 0, 1)">   margin-top</span>:<span style="color: rgba(0, 0, 255, 1)"> 10px</span>;  }</pre> </div> <p style="margin-left: 90px"><strong>2.7.3：Mixin参数</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">@mixin sexy-border($color, $width：10px)</span>{<span style="color: rgba(255, 0, 0, 1)"> //默认值   border</span>:<span style="color: rgba(0, 0, 255, 1)"> {     color: $color</span>;<span style="color: rgba(255, 0, 0, 1)">     width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>;<span style="color: rgba(255, 0, 0, 1)">     style</span>:<span style="color: rgba(0, 0, 255, 1)"> dashed</span>;   }<span style="color: rgba(128, 0, 0, 1)"> } p</span>{<span style="color: rgba(255, 0, 0, 1)"> @include sexy-border(blue, 1in);</span>}</pre> </div> <p style="margin-left: 90px"><span>编译后</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">p</span>{<span style="color: rgba(255, 0, 0, 1)">   border-color</span>:<span style="color: rgba(0, 0, 255, 1)"> blue</span>;<span style="color: rgba(255, 0, 0, 1)">   border-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 1in</span>;<span style="color: rgba(255, 0, 0, 1)">   border-style</span>:<span style="color: rgba(0, 0, 255, 1)"> dashed</span>;  }</pre> </div> <p style="margin-left: 90px">@Mixin&nbsp;可以用<strong><code>=</code></strong>&nbsp;表示，而<code>@include</code>&nbsp;可以用<strong><code>+</code></strong>&nbsp;表示</p> <p style="margin-left: 90px"><strong>2.8：函数</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">$grid-width: 40px; $gutter-width: 10px;  @function grid-width($n)</span>{<span style="color: rgba(255, 0, 0, 1)">   @return $n * $grid-width + ($n - 1) * $gutter-width;</span>}<span style="color: rgba(128, 0, 0, 1)">  #sidebar</span>{<span style="color: rgba(255, 0, 0, 1)"> width</span>:<span style="color: rgba(0, 0, 255, 1)"> grid-width(5)</span>; }</pre> </div> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">width</span>:<span style="color: rgba(0, 0, 255, 1)"> 240px</span>; }<span style="color: rgba(128, 0, 0, 1)"> //编译结果</span></pre> </div> <p style="margin-left: 30px"><span style="font-size: 16px"><strong>Less：</strong></span><span>Less是一门向后兼容的CSS扩展语言，语法上和Sass有很大的共性，它受Sass的影响，但对后来引入的SCSS格式有影响</span></p> <p style="margin-left: 30px"><span style="font-size: 16px"><strong>Stylus：</strong></span>在 stylus 中同样可以使用变量、函数、判断、循环一系列 CSS 没有的东西来编写样式文件，使用时需要Node.js</p> <p style="margin-left: 60px"><strong>基本使用：</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">$background-color = lightblue add (a, b = a)     a = unit(a, px)     b = unit(b, px)     a + b  .list-item .text-box     span         background-color: $background-color         margin: add(10)         padding: add(10, 5)     &amp;:hover         background-color: powderblue</span></pre> </div> <p style="margin-left: 60px">编译后</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.list-item span, .text-box span</span>{<span style="color: rgba(255, 0, 0, 1)">   background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> #add8e6</span>;<span style="color: rgba(255, 0, 0, 1)">   margin</span>:<span style="color: rgba(0, 0, 255, 1)"> 20px</span>;<span style="color: rgba(255, 0, 0, 1)">   padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 15px</span>}<span style="color: rgba(128, 0, 0, 1)"> .list-item:hover, .text-box:hover</span>{<span style="color: rgba(255, 0, 0, 1)">   background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> #b0e0e6</span>; }</pre> </div> <p style="margin-left: 30px"><strong><a href="postcss.com.cn" target="_blank" rel="nofollow">PostCSS</a>：</strong>一个用 JavaScript 工具和插件转换 CSS 代码的工具</p> <p style="margin-left: 60px">特点：</p> <ul> <li style="list-style-type: none"> <ul> <li>增加代码的可读性：可自动添加属性前缀</li> <li>可使用最新的CSS语法，如变量定义</li> <li>可模块化CSS，<code>CSS Modules</code></li> <li>可检查CSS语法错误，避免出错</li> <li>强大的格子系统LostGrid</li> </ul> </li> </ul> <p><span style="font-size: 18pt"><strong>二.异同点</strong></span></p> <p style="margin-left: 30px"><strong><span style="font-size: 16px">Less与Sass的异同</span>：</strong></p> <p style="margin-left: 30px"><span style="font-size: 16px"><strong>　　异：</strong></span></p> <ul> <li style="list-style-type: none"> <ul> <li>混入(Mixins)——class中的class</li> <li>参数混入——可以传递参数的class，就像函数一样</li> <li>嵌套规则——Class中嵌套class，从而减少重复的代码</li> <li>运算——CSS中用上数学</li> <li>颜色功能——可以编辑颜色</li> <li>名字空间(namespace)——分组样式，从而可以被调用</li> <li>作用域——局部修改样式</li> <li>JavaScript 赋值——在CSS中使用JavaScript表达式赋值</li> </ul> </li> </ul> <p style="margin-left: 60px"><span style="font-size: 16px"><strong>同：</strong></span></p> <ul> <li style="list-style-type: none"> <ul> <li>Less是基于JavaScript，是在客户端处理的；Sass是基于Ruby(一种简单快捷的面向对象的脚本语言)，是在服务器端处理的</li> <li>关于变量在Less和Sass中的唯一区别就是Less用@，Sass用$</li> <li>输出设置，Less没有输出设置，Sass提供4中输出选项：nested, compact, compressed 和 expanded</li> <li>Sass支持条件语句，可以使用if{}else{},for{}循环等等，而Less不支持</li> </ul> </li> </ul> <p><span style="font-size: 18pt"><strong>三.总结</strong></span></p> <p style="margin-left: 30px">为CSS增加一些编程的特性，如规则、变量、混入、选择器、继承等等特性，上手都很简单</p> <p style="margin-left: 30px">(CSS的调试，需要编译，文件过大都是预处理器的缺点)</p> <p>参考：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/xhxdd/p/12355887.html"  target="_blank" rel="nofollow">Stylus的基本使用</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.html.cn/qa/css3/13530.html"  target="_blank" rel="nofollow">Less与Sass的异同？</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.csdn.net/tags/MtjaQgwsNDUxNDItYmxvZwO0O0OO0O0O.html"  target="_blank" rel="nofollow">什么是CSS预处理器？</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.sass.hk/docs/"  target="_blank" rel="nofollow">Sass中文网</a></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2452.htm">缓存与数据库的一致性思考</a></p>
                                        <p>下一个：<a href="/html/category/article-2454.htm">5种SpringMvc的异步处理方式你都了解吗？</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2504.htm" title="全链路日志追踪系统介绍与思考">全链路日志追踪系统介绍与思考</a></li>
                        <li class="py-2"><a href="/html/category/article-4385.htm" title="动物疫苗的作用 动物疫苗的作用意义">动物疫苗的作用 动物疫苗的作用意义</a></li>
                        <li class="py-2"><a href="/html/category/article-2525.htm" title="自研FeignClient轻量级http客户端">自研FeignClient轻量级http客户端</a></li>
                        <li class="py-2"><a href="/html/category/article-2509.htm" title="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具">python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2524.htm" title="Django学习——图书管理系统图书修改、orm常用和非常用字段（了解）、 orm字段参数（了解）、字段关系（了解）、手动创建第三张表、Meta元信息、原生SQL、Django与ajax(入门)_在线工具">Django学习——图书管理系统图书修改、orm常用和非常用字段（了解）、 orm字段参数（了解）、字段关系（了解）、手动创建第三张表、Meta元信息、原生SQL、Django与ajax(入门)_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2839.htm" title="springboot之依赖版本管理">springboot之依赖版本管理</a></li>
                        <li class="py-2"><a href="/html/category/article-2508.htm" title="idea中配置maven仓库">idea中配置maven仓库</a></li>
                        <li class="py-2"><a href="/html/category/article-2510.htm" title="记一次jenkins发送邮件报错 一直报错 Could not send email as a part of the post-build publishers问题">记一次jenkins发送邮件报错 一直报错 Could not send email as a part of the post-build publishers问题</a></li>
                        <li class="py-2"><a href="/html/category/article-4083.htm" title="正则表达式 \b \B，单词边界的匹配">正则表达式 \b \B，单词边界的匹配</a></li>
                        <li class="py-2"><a href="/html/category/article-2523.htm" title="ElementUI el-upload 断点续传文件">ElementUI el-upload 断点续传文件</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>