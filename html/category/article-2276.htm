<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2276.htm" />
<title>分布式缓存&#8211;缓存与数据库一致性方案 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">分布式缓存&#8211;缓存与数据库一致性方案</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<h2 id="1-概述">1. 概述</h2> <p>缓存设计是应用系统设计中重要的一环，是通过空间换取时间的一种策略，达到高性能访问数据的目的；但是缓存的数据并不是时刻存在内存中，当数据发生变化时，如何与数据库中的数据保持一致，以满足业务系统要求，本篇将给出具体分析。</p> <h2 id="2-强一致与最终一致性">2. 强一致与最终一致性</h2> <p>所谓强一致，就是指系统在对外提供服务的过程中，时刻让缓存数据与数据库保持一致，这种情况比如秒杀系统，商家后台，他会设置秒杀商品，参与秒杀活动，一旦说他参与了秒杀活动，商品的库存本来是在数据库里的，此时必须直接被加载到缓存里，缓存立马就要可以被使用。最终一致性，就是允许缓存与数据库在中间一小段时间中有不一致的情况，但是最终两者是一致的，比如微博的粉丝数，页面每天的访问数。本篇重点讲最终一致性，强一致的情况后续分析。</p> <h2 id="3-缓存与数据库一致性">3. 缓存与数据库一致性</h2> <h3 id="31-缓存的更新机制">3.1 缓存的更新机制</h3> <p>缓存的更新，一般分为被动更新与主动更新，被动更新是指缓存在有效期到后，被淘汰。<br /> 被动更新如下步骤：<br /><code>step1</code>: 发起方查数据，缓存中没有，从数据库中获取，并写入缓存，同时设置过期时间t；<br /><code>step2</code>: 在t内，所有的查询，都由缓存提供，所有的写，直接写数据库；<br /><code>step3</code>: 当缓存数据到过期时间t后，缓存数据失效。后面的查询，回到了第1步。</p> <p>主动更新，一般为调用方发起缓存与数据库同时更新，缓存分为删除、更新，数据库分为更新，通过组合与先后顺序，分为如下四种情况：<br /><code>更新缓存、更新数据库</code>，<code>更新数据库，更新缓存</code>，<code>删除缓存，更新数据库</code>，<code>更新数据库，删除缓存</code>，下面逐一分析。</p> <h3 id="32-更新缓存更新数据库">3.2 更新缓存、更新数据库</h3> <p>这种情况，当缓存更新成功，数据库更新不成功时，数据不一致的风险比较高，所以<code>一般不采用</code>。</p> <h3 id="32-更新数据库更新缓存">3.2 更新数据库、更新缓存</h3> <p>当更新完数据库，缓存的加载前需要通过大量复杂计算才能得出缓存的值，不仅让发起方阻塞，影响性能；而且如果缓存命中率不高，很少使用，更浪费前期的复杂计算成本与缓存空间，这里就<code>不符合懒加载</code>的设计思想，故<code>一般也不采用</code>。</p> <h3 id="33-删除缓存更新数据库">3.3 删除缓存、更新数据库</h3> <p>如图所示，当两个调用方线程高并发访问的情况下，A线程先删除缓存，再更新数据库，此过程时间较长，B线程在A删除缓存后，迅速读取缓存，因缓存每命中，从数据库中读取再加载缓存，此时缓存还是旧值，等A线程更新完数据库后，发现又出现数据不一致的现象。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/90c350d42d348c5c72f5905fa5d21adc.jpg" alt="分布式缓存--缓存与数据库一致性方案"><br /> 一般大概率情况下，出现此根源的原因是<code>读比写快</code>，所以这种<code>一般也不采用</code>，如果非得采用，需要在写完数据库之后延迟一段时间再删除一次缓存，也称<code>延时双删</code>，延迟多久呢，一般看数据库的更新时长来决定，此做法也会带来<code>系统吞吐量下降</code>。</p> <h3 id="34-更新数据库删除缓存">3.4 更新数据库，删除缓存</h3> <p>该方案是比较经典的cache-aside模式，虽然这种方式也会带来不一致的情况，比如如下场景：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/1d755752eec0a97afae02f4bf5a5bf34.jpg" alt="分布式缓存--缓存与数据库一致性方案"></p> <p>前提：缓存无数据，数据库有数据。<br /> A：查询，B：更新<br /> 过程如下：<br /><code>step1</code>: A查缓存，无数据，去读数据库，旧值；<br /><code>step2</code>: B更新数据库为新值；<br /><code>step3</code>: B删除缓存；<br /><code>step4</code>: A将旧值写入缓存。</p> <p>该场景最终也会出现不一致，产生的根源是是<code>读比写慢</code>，这种是小概率事件，一般很少出现，如果非要解决这种情况，可以采用延迟双删，再删除一次缓存。</p> <h3 id="35-readwrite-through">3.5 Read/Write Through</h3> <p>上面的方式，数据库是缓存的来源，主导是数据库，而<code>Read/Write Through</code>模式，相当于缓存占主导。在cache-aside模式中，我们的应用代码需要维护两个数据存储，一个是缓存（Cache），一个是数据库（Repository）。而Read/Write Through做法是把更新数据库（Repository）的操作由缓存自己代理了，所以，对于应用层来说，就简单很多了。可以理解为，应用认为后端就是一个单一的存储，而存储自己维护自己的Cache。</p> <p><code>Read Through</code> 就是在查询操作中更新缓存，也就是说，当缓存失效的时候（过期或LRU换出），Cache Aside是由调用方负责把数据加载入缓存，而Read Through则用缓存服务自己来加载，从而对应用方是透明的。</p> <p><code>Write Through</code>， 和Read Through相仿，不过是在更新数据时发生。当有数据更新的时候，如果没有命中缓存，直接更新数据库，然后返回。如果命中了缓存，则更新缓存，然后再由Cache自己同步更新数据库</p> <p>值得注意的是，该方案在实现过程中，程序启动时，需将数据库的数据， 提前放到缓存中，不能等启动完成，再放缓存中。</p> <h3 id="35-write-behind">3.5 Write Behind</h3> <p>Write Behind 又叫 Write Back。一些了解Linux操作系统内核的同学对write back应该非常熟悉，这不就是Linux文件系统的Page Cache的算法吗？是的，你看基础这玩意全都是相通的。所以，底层思想很重要，我已经不是一次说过底层很重要这事了。</p> <p>Write Behind 思想，一句说就是，在更新数据的时候，只更新缓存，不更新数据库，而我们的缓存会异步地批量更新数据库。这个设计的好处就是让数据的I/O操作速度飞快（因为是直接操作内存），同时带来吞吐量大幅上升；因为异步，Write Behind 还可以合并对同一个数据的多次操作，所以性能的提高是相当可观的。</p> <p>但是，其带来的问题是，数据不是强一致性的，而且可能会丢失（我们知道Unix/Linux非正常关机会导致数据丢失，就是因为这个事）。在软件设计上，我们基本上不可能做出一个没有缺陷的设计，就像算法设计中的时间换空间，空间换时间一个道理，有时候，强一致性和高性能，高可用和高性性是有冲突的。如果说软件功能模块的思维是<code>逻辑与实现</code>，那么软件架构设计的思维是<code>权衡与取舍</code>。</p> <h2 id="4-总结">4. 总结</h2> <p>（1）上面讲的一些模式，具体在实际设计过程中，需要根据场景做权衡，这些东西都是计算机体系结构里的设计，比如CPU的缓存，硬盘文件系统中的缓存，硬盘上的缓存，数据库中的缓存。基本上来说，这些缓存更新的设计模式都是非常经典的，而且历经长时间考验的策略，所以这也就是，工程学上所谓的最佳实践。<br /> （2）有时候，我们觉得能做宏观的系统架构的人一定是很有经验的，其实，宏观系统架构中的很多设计都来源于这些微观的东西。比如，云计算中的很多虚拟化技术的原理，和传统的虚拟内存不是很像么？Unix下的那些I/O模型，也放大到了架构里的同步异步的模型，还有Unix发明的管道不就是数据流式计算架构吗？如果你要做好架构，首先你得把计算机体系结构以及很多底层的技术吃透了，应用层的架构一定能从底层找到原型或者影子。</p> <p>3）在软件开发或设计中，我非常建议在之前先去参考一下底层软件已有的设计和思路，比如操作系统、编译原理、计算机组成原理以及网络，找到相应的经典设计思路与最佳实践，吃透了已有的这些东西，再决定是否要重新发明轮子。千万不要似是而非地，想当然的做软件设计。</p> <p>4）上面，我们没有考虑缓存（Cache）和持久层（Repository）的整体事务的问题。比如，更新Cache成功，更新数据库失败了怎么吗？或是反过来。关于这个事，如果你需要强一致性，你需要使用两阶段提交协议——prepare, commit/rollback，比如Java 7 的XAResource，还有MySQL 5.7的 XA Transaction，有些cache也支持XA，比如EhCache，关于事务问题后续再分析。</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2275.htm">Spring Boot Admin 的使用</a></p>
                                        <p>下一个：<a href="/html/category/article-2277.htm">解决go-micro与其它gRPC框架之间的通信问题</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7458.htm" title="开宠物店靠什么赚钱（开宠物店挣钱么）">开宠物店靠什么赚钱（开宠物店挣钱么）</a></li>
                        <li class="py-2"><a href="/html/category/article-7919.htm" title="吴尊mv（吴尊）奔走相告，">吴尊mv（吴尊）奔走相告，</a></li>
                        <li class="py-2"><a href="/html/category/article-6584.htm" title="动物疫苗价格排行前十的有哪些品种呢 动物疫苗价格排行前十的有哪些品种呢图片">动物疫苗价格排行前十的有哪些品种呢 动物疫苗价格排行前十的有哪些品种呢图片</a></li>
                        <li class="py-2"><a href="/html/category/article-7412.htm" title="狗狗有寄生虫的10个迹象（狗寄生虫怎么清除）">狗狗有寄生虫的10个迹象（狗寄生虫怎么清除）</a></li>
                        <li class="py-2"><a href="/html/category/article-7827.htm" title="宠物领养平台app小程序有哪些软件（宠物领养平台app小程序有哪些软件免费）">宠物领养平台app小程序有哪些软件（宠物领养平台app小程序有哪些软件免费）</a></li>
                        <li class="py-2"><a href="/html/category/article-6906.htm" title="动物疫苗存放标语图片大全（动物疫苗未冷藏几小时失效）">动物疫苗存放标语图片大全（动物疫苗未冷藏几小时失效）</a></li>
                        <li class="py-2"><a href="/html/category/article-7505.htm" title="鸡蛋汤如何打">鸡蛋汤如何打</a></li>
                        <li class="py-2"><a href="/html/category/article-7643.htm" title="宠物领养协议法律效力如何 宠物领养协议法律效力如何">宠物领养协议法律效力如何 宠物领养协议法律效力如何</a></li>
                        <li class="py-2"><a href="/html/category/article-7229.htm" title="动物疫苗有哪些大厂家打（动物疫苗的上市公司有哪些）">动物疫苗有哪些大厂家打（动物疫苗的上市公司有哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-7366.htm" title="北京宠物店投资多少钱啊（在北京开一家宠物店能赚钱吗）">北京宠物店投资多少钱啊（在北京开一家宠物店能赚钱吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>