<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2521.htm" />
<title>C++入门   面向对象的基础 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">C++入门   面向对象的基础</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>C++是一门面向对象的语言，在C语言的基础上有了进一步的扩充与完善。</p> <div>  <strong>1、面向对象的特征：</strong> </div> <p><strong>封装：</strong>封装是一个用来将对象的状态和行为捆绑到一个单一逻辑单元机制的正式术语。不是面向对象语言所特有，在面向过程的C语言中用结构封装了数据，函数封装了逻辑。但是面向对象封装了数据和逻辑，一定意义上面向对象的封装更加完美。</p> <div>  <strong>继承：</strong>继承是定义新类的一种机制，使用这种机制创建新类时只需要声明新类和已创建类之间的差别，对于一个特定的继承关系，将新类称为子类或者派生类，被继承的类成为父类或者基类。 </div> <div>  <strong>多态：</strong>指属于两个或多个不同类的对象以各自类相关的不同方式响应同一消息的能力。多态使得消息发送者能给一组具有公共接口的对象发送相同的消息，接收者做出相应的回应。 </div> <div>  <strong>2、C++的类</strong><br />   </div> <div>  类的标准形式： </div> <div>  class &lt;类名&gt; </div> <div>  { </div> <div>  &nbsp; &nbsp; private： </div> <div>  &nbsp; &nbsp; &nbsp; &nbsp; 私有数据和成员函数 </div> <div>  &nbsp; &nbsp; public： </div> <div>  &nbsp; &nbsp; &nbsp; &nbsp; 公有数据和成员函数 </div> <div>  &nbsp; &nbsp; protected： </div> <div>  &nbsp; &nbsp; &nbsp; &nbsp; 保护数据和成员函数 </div> <div>  } </div> <div>  private（私有属性）：说明类的成员是私有的，可以被该类的成员函数访问，但类变量不能直接访问； </div> <div>  public （公有属性）：说明类的成员是公有的，可以被该类的成员函数和类变量访问； </div> <div>  protected（保护属性）：说明该类的成员是被保护的，可以被该类的成员函数和派生类访问，不能被类变量访问。 </div> <div>  <strong>3、this指针分析</strong> </div> <div>  <strong>&nbsp; &nbsp; </strong>this指针在类的每个成员函数中都存在，只是没有显示。this指针是通过函数参数的首参数来传递的，在成员函数开始执行前构造好，在成员函数执行结束后释放。 </div> <div>  <strong>4、构造函数和析构函数</strong> &nbsp; &nbsp; </div> <div>  <strong> 构造函数：</strong>对象被创建时，系统自动调用构造函数，构造函数是类中一种特殊的函数成员，用来在创建对象时初始化对象的数据成员。构造函数的函数名和类名相同，无返回值。<br />  <u><em>如果类中没有定义构造函数，编译器会提供一个默认构造函数，无返回值，无参数，函数体为空。但如果类中定义了构造函数，编译器就不再提供默认的构造函数。</em></u> </div> <div>  <strong>析构函数：</strong>作用和构造函数相反，用于释放资源。当一个对象的生命周期结束前或者被delete（堆对象）时，编译器自动调用其析构函数。<br />  <em><u>如果类中没有定义析构函数，编译器会提供一个默认析构函数，但默认析构函数不会释放动态分配的资源。</u></em> </div> <div>  析构函数形式：<br />  <strong><span style="background-color:rgb(255,255,255);">~类名（）{ &nbsp;&nbsp; }</span></strong> </div> <div>  <strong>类应用举例：随机生成一个数组</strong> </div> <pre><code class="language-cpp"><del><em> </em></del></code></pre> <p></p> <pre><code class="language-cpp"></code></pre> <div>  <code class="language-cpp">#ifndef _ARRAY_H #define _ARRAY_H class Array { private: int *m_data; </code> </div> <div>  <code class="language-cpp"> int m_length; void SetLength(int l); void InitArray(); void SetValue(int index, int val); int GetLength(); int GetValue(int index); }; #endif </code> </div> <p><code class="language-cpp"><br /></code></p> <pre class="cpp"><code class="language-cpp">#include "Array.h" #include &lt;iostream&gt; #include &lt;cstdlib&gt;  using namespace std;  void Array::SetLength(int l) { 	m_length = l; }  void Array::InitArray() { 	if (m_length &lt; 0) 	{ 		m_length = 0; 	}  	m_data = (int *)malloc(sizeof(int) * m_length); 	if (NULL == m_data) 	{ 		cout &lt;&lt; "malloc failure!" &lt;&lt; endl; 	} }  void Array::SetValue(int index, int val) { 	m_data[index] = val; }  int Array::GetLength() { 	return m_length; }  int Array::GetValue(int index) { 	return m_data[index]; } </code></pre> <pre><code class="language-cpp">#include "Array.h" #include &lt;iostream&gt;  using namespace std;  int main() { 	int length, i; 	Array a, b;  	cout &lt;&lt; "Please input " &lt;&lt; endl; 	cin &gt;&gt; length;  	a.SetLength(length); 	a.InitArray();  	for (i = 0; i &lt; a.GetLength(); i++) 	{ 		a.SetValue(i, i + 1); 	}  	for (int j = 0; j &lt; a.GetLength(); j++) 	{ 		cout &lt;&lt; a.GetValue(j) &lt;&lt; endl; 	}  	return 0; } </code></pre> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2520.htm">Jav详细介绍的Mapper对应的Mybatis xml查询结果resultType返回值类型</a></p>
                                        <p>下一个：<a href="/html/category/article-2522.htm">Python 实现走迷宫深度优先回溯算法（优质代码）</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2492.htm" title="JVM_01 内存结构(程序计数器、虚拟机栈、本地方法栈)">JVM_01 内存结构(程序计数器、虚拟机栈、本地方法栈)</a></li>
                        <li class="py-2"><a href="/html/category/article-2517.htm" title="C#关键字Check简单介绍_C#教程">C#关键字Check简单介绍_C#教程</a></li>
                        <li class="py-2"><a href="/html/category/article-2515.htm" title="Java中Stack.peek()与Stack.pop()与Queue.poll的区别">Java中Stack.peek()与Stack.pop()与Queue.poll的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-3772.htm" title="git下载、安装、配置与简单应用">git下载、安装、配置与简单应用</a></li>
                        <li class="py-2"><a href="/html/category/article-2526.htm" title="【笔记】PyTorch快速入门：基础部分合集_在线工具">【笔记】PyTorch快速入门：基础部分合集_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2482.htm" title="mysql中的时间字段用什么数据类型">mysql中的时间字段用什么数据类型</a></li>
                        <li class="py-2"><a href="/html/category/article-2506.htm" title="JavaScript如何使用过滤器从数组中删除元素">JavaScript如何使用过滤器从数组中删除元素</a></li>
                        <li class="py-2"><a href="/html/category/article-2502.htm" title="python end用法_python end用法">python end用法_python end用法</a></li>
                        <li class="py-2"><a href="/html/category/article-2509.htm" title="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具">python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3746.htm" title="Python轻松入门-13 函数返回值">Python轻松入门-13 函数返回值</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>