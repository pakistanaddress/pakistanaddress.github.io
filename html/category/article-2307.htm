<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2307.htm" />
<title>PyQt5 在qtdesigner中使用自定义的控件 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">PyQt5 在qtdesigner中使用自定义的控件</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#_2" rel="nofollow">前言</a></li> <li><a href="#1___7" rel="nofollow">1 提升控件</a></li> <li><a href="#2__uipy_63" rel="nofollow">2 转化.ui文件为.py文件</a></li> </ul> </div> <h1> <a id="_2" rel="nofollow"></a>前言</h1> <p><strong><font color="red">奇奇怪怪!</font></strong>,虽然和我想象不一样但是还是记录一下吧！本来我以为是在QDesigner左边能显示控件可以实时拖拽，但是谁知道实际是<strong><font color="red">在.ui文件中相当于一个占位符一样理解! 转化为.py文件加载了自定义的控件类（就是类似占位替换的感觉）</font></strong>，果然python 用QDesigner太鸡肋，有这个时间拖来拖去，代码码UI都完了！！！</p> <h1> <a id="1___7" rel="nofollow"></a>1 提升控件</h1> <p>打开QDesigner，创建一个QWidget，在上面拖2个QFrame,给QWidget创建一个水平布局，如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/10550dae07ecdff43161f35b2d93af03.jpg" alt="PyQt5 在qtdesigner中使用自定义的控件"></p> <p>选择一个frame右击提升窗口部件，最后点击提升，如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/78d723b371eabe4ac3fb82e65c0ae4d4.jpg" alt="PyQt5 在qtdesigner中使用自定义的控件"><br /> 提升为自定义类：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/2eedbcd53e9ca97cb6585502071aec04.jpg" alt="PyQt5 在qtdesigner中使用自定义的控件"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/74029a7721bfd65fe75bec2ea404dc79.jpg" alt="PyQt5 在qtdesigner中使用自定义的控件"><br /> 其中BoardFrame为自定义的一个控件，BoardFrame继承于QFrame.<br /> BoardFrame.py代码如下：</p> <pre><code class="prism language-python"><span class="token comment">#!/usr/bin/env python</span> <span class="token comment"># -*- coding:utf-8 -*-</span> <span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> pyqtSignal<span class="token punctuation">,</span>Qt<span class="token punctuation">,</span>QRegExp <span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QRegExpValidator <span class="token keyword">import</span> sys  <span class="token keyword">class</span> <span class="token class-name">BoardFrame</span><span class="token punctuation">(</span>QFrame<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>argc<span class="token punctuation">,</span> <span class="token operator">**</span>argv<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token builtin">super</span><span class="token punctuation">(</span>BoardFrame<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">*</span>argc<span class="token punctuation">,</span> <span class="token operator">**</span>argv<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>setFixedSize<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>mainlayout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>name <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">"名字"</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>name<span class="token punctuation">.</span>setFrameStyle<span class="token punctuation">(</span>QFrame<span class="token punctuation">.</span>Box <span class="token operator">|</span> QFrame<span class="token punctuation">.</span>Plain<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>name<span class="token punctuation">.</span>setAlignment<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>mainlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name <span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame <span class="token operator">=</span> QFrame<span class="token punctuation">(</span>self<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>mainlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>frame<span class="token punctuation">)</span>         frame_layout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">.</span>frame<span class="token punctuation">)</span>         <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             btn <span class="token operator">=</span> QCheckBox<span class="token punctuation">(</span><span class="token string">"按钮%d "</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>             frame_layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>btn<span class="token punctuation">)</span>             frame_layout<span class="token punctuation">.</span>setContentsMargins<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                 frame01 <span class="token operator">=</span> QFrame<span class="token punctuation">(</span>self<span class="token punctuation">.</span>frame<span class="token punctuation">)</span>                 frame01<span class="token punctuation">.</span>setFrameStyle<span class="token punctuation">(</span>QFrame<span class="token punctuation">.</span>HLine <span class="token operator">|</span> QFrame<span class="token punctuation">.</span>Plain<span class="token punctuation">)</span>                 frame_layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>frame01<span class="token punctuation">)</span>         <span class="token comment">#</span>         childlayout <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>         clear_btn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span><span class="token string">"全部取消"</span><span class="token punctuation">)</span>         set_btn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span><span class="token string">"全部勾选"</span><span class="token punctuation">)</span>         childlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>clear_btn<span class="token punctuation">)</span>         childlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>set_btn<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>mainlayout<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span>childlayout<span class="token punctuation">)</span>         <span class="token comment">##边框</span>         self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>setFrameStyle<span class="token punctuation">(</span>QFrame<span class="token punctuation">.</span>Box <span class="token operator">|</span> QFrame<span class="token punctuation">.</span>Plain<span class="token punctuation">)</span>          <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>     app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>     win <span class="token operator">=</span> BoardFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>     win<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>     sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <h1> <a id="2__uipy_63" rel="nofollow"></a>2 转化.ui文件为.py文件</h1> <p>保存ui文件为test.ui,然后转化为.py文件 <font color="red" size="6">pyuic5 -o test.py test.ui</font><br /> 将BoardFrame.py 和 test.py文件放到同级目录。</p> <pre><code class="prism language-python"><span class="token comment"># -*- coding: utf-8 -*-</span>  <span class="token comment"># Form implementation generated from reading ui file 'test.ui'</span> <span class="token comment">#</span> <span class="token comment"># Created by: PyQt5 UI code generator 5.15.2</span> <span class="token comment">#</span> <span class="token comment"># WARNING: Any manual changes made to this file will be lost when pyuic5 is</span> <span class="token comment"># run again.  Do not edit this file unless you know what you are doing.</span>   <span class="token keyword">from</span> PyQt5 <span class="token keyword">import</span> QtCore<span class="token punctuation">,</span> QtGui<span class="token punctuation">,</span> QtWidgets <span class="token keyword">from</span> BoardFrame <span class="token keyword">import</span> BoardFrame   <span class="token keyword">class</span> <span class="token class-name">Ui_Form</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> Form<span class="token punctuation">)</span><span class="token punctuation">:</span>         Form<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">"Form"</span><span class="token punctuation">)</span>         Form<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>horizontalLayout <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QHBoxLayout<span class="token punctuation">(</span>Form<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>horizontalLayout<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">"horizontalLayout"</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame <span class="token operator">=</span> BoardFrame<span class="token punctuation">(</span>Form<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>setFrameShape<span class="token punctuation">(</span>QtWidgets<span class="token punctuation">.</span>QFrame<span class="token punctuation">.</span>StyledPanel<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>setFrameShadow<span class="token punctuation">(</span>QtWidgets<span class="token punctuation">.</span>QFrame<span class="token punctuation">.</span>Raised<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">"frame"</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>horizontalLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>frame<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame_2 <span class="token operator">=</span> BoardFrame<span class="token punctuation">(</span>Form<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame_2<span class="token punctuation">.</span>setFrameShape<span class="token punctuation">(</span>QtWidgets<span class="token punctuation">.</span>QFrame<span class="token punctuation">.</span>StyledPanel<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame_2<span class="token punctuation">.</span>setFrameShadow<span class="token punctuation">(</span>QtWidgets<span class="token punctuation">.</span>QFrame<span class="token punctuation">.</span>Raised<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>frame_2<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">"frame_2"</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>horizontalLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>frame_2<span class="token punctuation">)</span>          self<span class="token punctuation">.</span>retranslateUi<span class="token punctuation">(</span>Form<span class="token punctuation">)</span>         QtCore<span class="token punctuation">.</span>QMetaObject<span class="token punctuation">.</span>connectSlotsByName<span class="token punctuation">(</span>Form<span class="token punctuation">)</span>      <span class="token keyword">def</span> <span class="token function">retranslateUi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> Form<span class="token punctuation">)</span><span class="token punctuation">:</span>         _translate <span class="token operator">=</span> QtCore<span class="token punctuation">.</span>QCoreApplication<span class="token punctuation">.</span>translate         Form<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span>_translate<span class="token punctuation">(</span><span class="token string">"Form"</span><span class="token punctuation">,</span> <span class="token string">"Form"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#上面为工具转化的代码，下面为我们自己添加的测试</span> <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>     <span class="token keyword">import</span> sys     app <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>     widget <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">#widget.setStyleSheet("background-color:red;")</span>     widget<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>     test <span class="token operator">=</span> Ui_Form<span class="token punctuation">(</span><span class="token punctuation">)</span>     test<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span>widget<span class="token punctuation">)</span>     sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  </code></pre> <p>效果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/7abd8abf31077cf62443d6f4ef6d0ab8.jpg" alt="PyQt5 在qtdesigner中使用自定义的控件"></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2306.htm">java8在日常开发中使用LocalDate和LocalTime</a></p>
                                        <p>下一个：<a href="/html/category/article-2308.htm">Spark(30) &#8212; Spark SQL中更多Parquet文件读写(scala)</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4084.htm" title="@Scheduled 动态配置cron">@Scheduled 动态配置cron</a></li>
                        <li class="py-2"><a href="/html/category/article-2509.htm" title="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具">python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2527.htm" title="Python基础：理解SQL注入问题的起因，掌握pymysql参数化防止黑客使用SQL注入浸入系统和拖库">Python基础：理解SQL注入问题的起因，掌握pymysql参数化防止黑客使用SQL注入浸入系统和拖库</a></li>
                        <li class="py-2"><a href="/html/category/article-4112.htm" title="Vue3实践setup函数详解">Vue3实践setup函数详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2545.htm" title="Metalama简介2.利用Aspect在编译时进行消除重复代码">Metalama简介2.利用Aspect在编译时进行消除重复代码</a></li>
                        <li class="py-2"><a href="/html/category/article-2526.htm" title="【笔记】PyTorch快速入门：基础部分合集_在线工具">【笔记】PyTorch快速入门：基础部分合集_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2524.htm" title="Django学习——图书管理系统图书修改、orm常用和非常用字段（了解）、 orm字段参数（了解）、字段关系（了解）、手动创建第三张表、Meta元信息、原生SQL、Django与ajax(入门)_在线工具">Django学习——图书管理系统图书修改、orm常用和非常用字段（了解）、 orm字段参数（了解）、字段关系（了解）、手动创建第三张表、Meta元信息、原生SQL、Django与ajax(入门)_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2508.htm" title="idea中配置maven仓库">idea中配置maven仓库</a></li>
                        <li class="py-2"><a href="/html/category/article-2518.htm" title="vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)">vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</a></li>
                        <li class="py-2"><a href="/html/category/article-2505.htm" title="SpringMvc注解@PathVariable">SpringMvc注解@PathVariable</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>