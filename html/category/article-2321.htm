<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2321.htm" />
<title>Python3 MySQL 数据库连接 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">Python3 MySQL 数据库连接</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<div id="content_views" class="htmledit_views"> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px"> </h2> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px"> PyMySQL 安装</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 在使用 PyMySQL 之前，我们需要确保 PyMySQL 已安装。</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> PyMySQL 下载地址：https://github.com/PyMySQL/PyMySQL。</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 如果还未安装，我们可以使用以下命令安装最新版的 PyMySQL：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">$ pip install PyMySQL </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 如果你的系统不支持 pip 命令，可以使用以下方式安装：</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 1、使用 git 命令下载安装包安装(你也可以手动下载)：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">$ git clone https://github.com/PyMySQL/PyMySQL $ cd PyMySQL/ $ python3 setup.py install </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 2、如果需要制定版本号，可以使用 curl 命令来安装：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">$ # X.X 为 PyMySQL 的版本号 $ curl -L https://github.com/PyMySQL/PyMySQL/tarball/pymysql-X.X | tar xz $ cd PyMySQL* $ python3 setup.py install $ # 现在你可以删除 PyMySQL* 目录 </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> <span style="margin:0px; padding:0px">注意：</span>请确保您有root权限来安装上述模块。</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 安装的过程中可能会出现"ImportError: No module named setuptools"的错误提示，意思是你没有安装setuptools，你可以访问https://pypi.python.org/pypi/setuptools&nbsp;找到各个系统的安装方法。</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> Linux 系统安装实例：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">$ wget https://bootstrap.pypa.io/ez_setup.py $ python3 ez_setup.py</pre> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px"> 数据库连接</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 连接数据库前，请先确认以下事项：</p> <ul style="margin:10px 0px; padding:0px 0px 0px 30px; list-style-position:outside; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> 您已经创建了数据库 TESTDB.</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> 在TESTDB数据库中您已经创建了表 EMPLOYEE</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> EMPLOYEE表字段为 FIRST_NAME, LAST_NAME, AGE, SEX 和 INCOME。</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> 连接数据库TESTDB使用的用户名为 "testuser" ，密码为 "test123",你可以可以自己设定或者直接使用root用户名及其密码，Mysql数据库用户授权请使用Grant命令。</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> 在你的机子上已经安装了 Python MySQLdb 模块。</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> 如果您对sql语句不熟悉，可以访问我们的&nbsp;SQL基础教程 </li> </ul> <h3 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:14px"> 实例：</h3> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> 以下实例链接Mysql的TESTDB数据库：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important"><pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用 cursor() 方法创建一个游标对象 cursor cursor = db.cursor()  # 使用 execute()  方法执行 SQL 查询  cursor.execute("SELECT VERSION()")  # 使用 fetchone() 方法获取单条数据. data = cursor.fetchone()  print ("Database version : %s " % data)  # 关闭数据库连接 db.close() </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">执行以上脚本输出结果如下：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">Database version : 5.5.20-log </pre> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">创建数据库表</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">如果数据库连接存在我们可以使用execute()方法来为数据库创建表，如下所示创建表EMPLOYEE：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用 cursor() 方法创建一个游标对象 cursor cursor = db.cursor()  # 使用 execute() 方法执行 SQL，如果表存在则删除 cursor.execute("DROP TABLE IF EXISTS EMPLOYEE")  # 使用预处理语句创建表 sql = """CREATE TABLE EMPLOYEE (          FIRST_NAME  CHAR(20) NOT NULL,          LAST_NAME  CHAR(20),          AGE INT,            SEX CHAR(1),          INCOME FLOAT )"""  cursor.execute(sql)  # 关闭数据库连接 db.close() </pre> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">数据库插入操作</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">以下实例使用执行 SQL INSERT 语句向表 EMPLOYEE 插入记录：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用cursor()方法获取操作游标  cursor = db.cursor()  # SQL 插入语句 sql = """INSERT INTO EMPLOYEE(FIRST_NAME,          LAST_NAME, AGE, SEX, INCOME)          VALUES ('Mac', 'Mohan', 20, 'M', 2000)""" try:    # 执行sql语句    cursor.execute(sql)    # 提交到数据库执行    db.commit() except:    # 如果发生错误则回滚    db.rollback()  # 关闭数据库连接 db.close() </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">以上例子也可以写成如下形式：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用cursor()方法获取操作游标  cursor = db.cursor()  # SQL 插入语句 sql = "INSERT INTO EMPLOYEE(FIRST_NAME, \        LAST_NAME, AGE, SEX, INCOME) \        VALUES ('%s', '%s', '%d', '%c', '%d' )" % \        ('Mac', 'Mohan', 20, 'M', 2000) try:    # 执行sql语句    cursor.execute(sql)    # 执行sql语句    db.commit() except:    # 发生错误时回滚    db.rollback()  # 关闭数据库连接 db.close() </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">以下代码使用变量向SQL语句中传递参数:</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">.................................. user_id = "test123" password = "password"  con.execute('insert into Login values("%s", "%s")' % \              (user_id, password)) .................................. </pre> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">数据库查询操作</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。</p> <ul style="margin:10px 0px; padding:0px 0px 0px 30px; list-style-position:outside; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> <span style="margin:0px; padding:0px">fetchone():</span>&nbsp;该方法获取下一个查询结果集。结果集是一个对象</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> <span style="margin:0px; padding:0px">fetchall():&nbsp;</span>接收全部的返回结果行.</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial"> <span style="margin:0px; padding:0px">rowcount:</span>&nbsp;这是一个只读属性，并返回执行execute()方法后影响的行数。</li> </ul> <h3 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:14px">实例：</h3> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">查询EMPLOYEE表中salary（工资）字段大于1000的所有数据：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用cursor()方法获取操作游标  cursor = db.cursor()  # SQL 查询语句 sql = "SELECT * FROM EMPLOYEE \        WHERE INCOME > '%d'" % (1000) try:    # 执行SQL语句    cursor.execute(sql)    # 获取所有记录列表    results = cursor.fetchall()    for row in results:       fname = row[0]       lname = row[1]       age = row[2]       sex = row[3]       income = row[4]        # 打印结果       print ("fname=%s,lname=%s,age=%d,sex=%s,income=%d" % \              (fname, lname, age, sex, income )) except:    print ("Error: unable to fecth data")  # 关闭数据库连接 db.close() </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">以上脚本执行结果如下：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">fname=Mac, lname=Mohan, age=20, sex=M, income=2000 </pre> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">数据库更新操作</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">更新操作用于更新数据表的的数据，以下实例将 TESTDB表中的 SEX 字段全部修改为 'M'，AGE 字段递增1：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用cursor()方法获取操作游标  cursor = db.cursor()  # SQL 更新语句 sql = "UPDATE EMPLOYEE SET AGE = AGE + 1                           WHERE SEX = '%c'" % ('M') try:    # 执行SQL语句    cursor.execute(sql)    # 提交到数据库执行    db.commit() except:    # 发生错误时回滚    db.rollback()  # 关闭数据库连接 db.close() </pre> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">删除操作</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">删除操作用于删除数据表中的数据，以下实例演示了删除数据表 EMPLOYEE 中 AGE 大于 20 的所有数据：</p> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important">#!/usr/bin/python3  import pymysql  # 打开数据库连接 db = pymysql.connect("localhost","testuser","test123","TESTDB" )  # 使用cursor()方法获取操作游标  cursor = db.cursor()  # SQL 删除语句 sql = "DELETE FROM EMPLOYEE WHERE AGE > '%d'" % (20) try:    # 执行SQL语句    cursor.execute(sql)    # 提交修改    db.commit() except:    # 发生错误时回滚    db.rollback()  # 关闭连接 db.close() </pre> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">执行事务</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">事务机制可以确保数据一致性。</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">事务应该具有4个属性：原子性、一致性、隔离性、持久性。这四个属性通常称为ACID特性。</p> <ul style="margin:10px 0px; padding:0px 0px 0px 30px; list-style-position:outside; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial">原子性（atomicity）。一个事务是一个不可分割的工作单位，事务中包括的诸操作要么都做，要么都不做。</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial">一致性（consistency）。事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial">隔离性（isolation）。一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</li> <li style="margin:0px; padding:0px; list-style-type:inherit; list-style-position:initial">持久性（durability）。持续性也称永久性（permanence），指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响。</li> </ul> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">Python DB API 2.0 的事务提供了两个方法 commit 或 rollback。</p> <h3 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:14px">实例</h3> <pre style="margin-top:15px; margin-bottom:15px; padding:10px 5px; overflow:auto; font-family:Consolas,"Courier New",Courier,monospace; font-size:14px; line-height:1.7; word-break:break-all; color:rgb(51,51,51); background:rgb(239,239,239); border:1px solid rgb(221,221,221); width:auto; max-width:700px; word-wrap:break-word!important; white-space:pre-wrap!important"># SQL删除记录语句 sql = "DELETE FROM EMPLOYEE WHERE AGE > '%d'" % (20) try:    # 执行SQL语句    cursor.execute(sql)    # 向数据库提交    db.commit() except:    # 发生错误时回滚    db.rollback() </pre> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">对于支持事务的数据库， 在Python数据库编程中，当游标建立之时，就自动开始了一个隐形的数据库事务。</p> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">commit()方法游标的所有更新操作，rollback（）方法回滚当前游标的所有操作。每一个方法都开始了一个新的事务。</p> <hr style="margin:15px 0px; padding:0px; height:0px; border-right:0px; border-bottom:0px; border-left:0px; border-top-style:solid; border-top-color:rgb(170,170,170); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"/> <h2 style="margin:20px 0px 10px; padding:0px; font-family:微软雅黑; line-height:1.7; font-size:16px">错误处理</h2> <p style="margin-top:0px; margin-bottom:5px; padding-top:0px; padding-bottom:0px; word-wrap:break-word; line-height:1.7; font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px">DB API中定义了一些数据库操作的错误及异常，下表列出了这些错误和异常:</p> <table class="reference" style="margin:4px 0px; padding:0px; border-collapse:collapse; border-spacing:0px; max-width:100%; width:812px; table-layout:fixed; color:rgb(0,0,0); font-family:Verdana,Arial,Helvetica,sans-serif; font-size:14px"> <tbody style="margin:0px; padding:0px"> <tr style="margin:0px; padding:0px; background-color:rgb(239,239,239)"> <th style="margin:0px; padding:3px; text-align:left; background-color:rgb(189,189,189); border-top:1px solid rgb(189,189,189); border-right:1px solid rgb(189,189,189); border-bottom:none; border-left:1px solid rgb(189,189,189); color:rgb(255,255,255); font-size:14px; vertical-align:top; width:121px">异常</th> <th style="margin:0px; padding:3px; text-align:left; background-color:rgb(189,189,189); border-top:1px solid rgb(189,189,189); border-right:1px solid rgb(189,189,189); border-bottom:none; border-left:1px solid rgb(189,189,189); color:rgb(255,255,255); font-size:14px; vertical-align:top">描述</th> </tr> <tr style="margin:0px; padding:0px"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">Warning</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">当有严重警告时触发，例如插入数据是被截断等等。必须是<br />  StandardError 的子类。</td> </tr> <tr style="margin:0px; padding:0px; background-color:rgb(239,239,239)"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">Error</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">警告以外所有其他错误类。必须是<br />  StandardError 的子类。</td> </tr> <tr style="margin:0px; padding:0px"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">InterfaceError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">当有数据库接口模块本身的错误（而不是数据库的错误）发生时触发。<br />  必须是Error的子类。</td> </tr> <tr style="margin:0px; padding:0px; background-color:rgb(239,239,239)"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">DatabaseError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">和数据库有关的错误发生时触发。<br />  必须是Error的子类。</td> </tr> <tr style="margin:0px; padding:0px"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">DataError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">当有数据处理时的错误发生时触发，例如：除零错误，数据超范围等等。<br />  必须是DatabaseError的子类。</td> </tr> <tr style="margin:0px; padding:0px; background-color:rgb(239,239,239)"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">OperationalError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">指非用户控制的，而是操作数据库时发生的错误。例如：连接意外断开、<br />  数据库名未找到、事务处理失败、内存分配错误等等操作数据库是发生的错误。 必须是DatabaseError的子类。</td> </tr> <tr style="margin:0px; padding:0px"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">IntegrityError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">完整性相关的错误，例如外键检查失败等。必须是DatabaseError子类。</td> </tr> <tr style="margin:0px; padding:0px; background-color:rgb(239,239,239)"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">InternalError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">数据库的内部错误，例如游标（cursor）失效了、事务同步失败等等。<br />  必须是DatabaseError子类。</td> </tr> <tr style="margin:0px; padding:0px"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">ProgrammingError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">程序错误，例如数据表（table）没找到或已存在、SQL语句语法错误、<br />  参数数量错误等等。必须是DatabaseError的子类。</td> </tr> <tr style="margin:0px; padding:0px; background-color:rgb(239,239,239)"> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">NotSupportedError</td> <td style="margin:0px; padding:7px 5px; min-width:40px; height:30px; border:1px solid rgb(221,221,221); vertical-align:top; font-size:14px">不支持错误，指使用了数据库不支持的函数或API等。例如在连接对象上<br />  使用.rollback()函数，然而数据库并不支持事务或者事务已关闭。 必须是DatabaseError的子类。</td> </tr> </tbody> </table> <p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2320.htm">DBeaver连接数据库相关操作(批量执行sql报错解决)</a></p>
                                        <p>下一个：<a href="/html/category/article-2322.htm">python加载mnist数据集</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2523.htm" title="ElementUI el-upload 断点续传文件">ElementUI el-upload 断点续传文件</a></li>
                        <li class="py-2"><a href="/html/category/article-4458.htm" title="猫汪清宠（喵汪清宠驱虫药怎么样）">猫汪清宠（喵汪清宠驱虫药怎么样）</a></li>
                        <li class="py-2"><a href="/html/category/article-6120.htm" title="国内十大毒猫粮（2019中国十大毒猫粮）">国内十大毒猫粮（2019中国十大毒猫粮）</a></li>
                        <li class="py-2"><a href="/html/category/article-4338.htm" title="济南美联教育 济南美联教育培训学校">济南美联教育 济南美联教育培训学校</a></li>
                        <li class="py-2"><a href="/html/category/article-4459.htm" title="附近哪里有领养狗的地方电话（附近有没有领养狗的地方）">附近哪里有领养狗的地方电话（附近有没有领养狗的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-2528.htm" title="算法：在一个集合中选取所有符合条件的元素组合">算法：在一个集合中选取所有符合条件的元素组合</a></li>
                        <li class="py-2"><a href="/html/category/article-2524.htm" title="Django学习——图书管理系统图书修改、orm常用和非常用字段（了解）、 orm字段参数（了解）、字段关系（了解）、手动创建第三张表、Meta元信息、原生SQL、Django与ajax(入门)_在线工具">Django学习——图书管理系统图书修改、orm常用和非常用字段（了解）、 orm字段参数（了解）、字段关系（了解）、手动创建第三张表、Meta元信息、原生SQL、Django与ajax(入门)_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4418.htm" title="动物医院运营管理工作内容怎么写（动物医院管理流程）">动物医院运营管理工作内容怎么写（动物医院管理流程）</a></li>
                        <li class="py-2"><a href="/html/category/article-4309.htm" title="蜜雪加盟一般多少钱镇上（蜜雪加盟需要多少钱）">蜜雪加盟一般多少钱镇上（蜜雪加盟需要多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-6014.htm" title="国内宠物粮上市公司有哪些公司（宠物主粮上市公司）">国内宠物粮上市公司有哪些公司（宠物主粮上市公司）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>