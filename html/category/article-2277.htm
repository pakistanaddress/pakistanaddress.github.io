<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2277.htm" />
<title>解决go-micro与其它gRPC框架之间的通信问题 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">解决go-micro与其它gRPC框架之间的通信问题</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f345f0d9ff66a91ef21802d274cc9303.jpg" alt="解决go-micro与其它gRPC框架之间的通信问题"></p> <p>在之前的文章中分别介绍了使用gRPC官方插件和go-micro插件开发gRPC应用程序的方式，都能正常走通。不过当两者混合使用的时候，互相访问就成了问题。比如使用go-micro插件生成的gRPC客户端访问基于gRPC官方插件创建的服务端时就会出现如下错误：</p> <pre><code>{"id":"go.micro.client","code":501,"status":"Not Implemented"}</code></pre> <p>经过一番探索，发现是因为go-micro的插件生成代码时丢弃了proto定义中的package，客户端API和服务端API都没有使用这个package，所以它自己也能逻辑自洽，但是和其它框架或者语言的gRPC服务通信时就出现问题了。</p> <p>这里以 hello.proto 为例：</p> <pre><code>syntax = "proto3";  option go_package="/proto";  package Business;  service Hello {   rpc Say (SayRequest) returns (SayResponse); }  message SayResponse {   string Message = 1; }  message SayRequest {   string Name = 1; }</code></pre> <p>对于客户端代理，protoc-gen-go-grpc生成的是：</p> <pre><code>err := c.cc.Invoke(ctx, "/Business.Hello/Say", in, out, opts...)</code></pre> <p>protoc-gen-micro生成的是：</p> <pre><code>req := c.c.NewRequest(c.name, "Hello.Say", in)</code></pre> <p>可以明显看到，go-micro生成的gRPC method中缺少package。当然这个method的风格也有些差异，不过这个不是问题，因为go-micro还会它进行一些格式化处理，格式化代码在grpc插件中。</p> <p>plugins/client/grpc/request.go :</p> <pre><code>func methodToGRPC(service, method string) string { 	// no method or already grpc method 	if len(method) == 0 || method[0] == '/' { 		return method 	}  	// assume method is Foo.Bar 	mParts := strings.Split(method, ".") 	if len(mParts) != 2 { 		return method 	}  	if len(service) == 0 { 		return fmt.Sprintf("/%s/%s", mParts[0], mParts[1]) 	}  	// return /pkg.Foo/Bar 	return fmt.Sprintf("/%s.%s/%s", service, mParts[0], mParts[1]) }</code></pre> <p>可以看到go-micro直接把服务名称作为了package名称，这两者不能等同，不相同时就会出现问题。</p> <p>网上也没有人提过这个问题，可能混合使用的人不多吧。于是我研究了一下 go-micro 的源码，因为是生成的代码中缺少信息，所以要解决这个问题还是得从protoc-gen-micro入手。</p> <p>注意这里使用的是<strong>go-micro v4</strong>版本，其它版本未跟进。</p> <h2 id="客户端改造">客户端改造</h2> <p>针对客户端问题，我做了如下一些修改：</p> <p>在生成客户端method时加上package，并直接生成gRPC风格method（go-micro内部其实支持这种风格），修改文件：cmd/protoc-gen-micro/plugin/micro/micro.go</p> <pre><code class="language-go">func (g *micro) generateClientMethod(pkg, reqServ, servName, serviceDescVar string, method *pb.MethodDescriptorProto, descExpr string) { 	reqMethod := fmt.Sprintf("%s.%s", servName, method.GetName()) 	useGrpc := g.gen.Param["use_grpc"] 	if useGrpc != "" { 		reqMethod = fmt.Sprintf("/%s.%s/%s", pkg, servName, method.GetName()) 	} ...</code></pre> <p>因为还要向前兼容，不能影响现有用户，所以给这个逻辑加了一个开关，使用参数 use_grpc 才会应用新的生成方式。generateClientMethod 方法的 pkg 参数原来并没有，是新加的，从上下文中也比较容易获取到。具体改动可以看这里：https://github.com/asim/go-micro/pull/2474/commits/0d435a690ea21a3f64b0534d1fa244f512601493</p> <p>现在如果明确只使用gRPC进行通信，或者需要和其它框架或者语言的gRPC应用程序通信，生成代码时可以这样做：</p> <pre><code>protoc --go_out=. --micro_out=. --micro_opt=use_grpc=1 xxx.proto</code></pre> <p>关键就是<em>--micro_opt=use_grpc=1</em>，<em>use_grpc</em>这个参数会传递给 protoc-gen-micro，然后就可以在上边修改过的代码中获取到，不管这个参数的值是什么，只要使用了它，就会生成gRPC风格的带package的method。现在生成的代码是这样的：</p> <pre><code>req := c.c.NewRequest(c.name, "/Business.Hello/Say", in)</code></pre> <p>用这个客户端代理访问其它框架或者语言开发的gRPC服务就没有问题了，当然访问go-micro的gRPC服务也没有问题。</p> <p>怎么获取到这个最新版的 protoc-gen-micro 呢？这个修改提了PR之后，目前已经合并到官方的Github仓库中，但是还没有打tag，可以这样安装：</p> <pre><code>go install go-micro.dev/v4/cmd/protoc-gen-micro@1919048c8f20</code></pre> <p>这可能不是一个好的修改，因为还需要知道有 use_grpc 这么个参数。肯定还有别的修改方案，但是因为对go-micro了解的不多，所有只选择了这个不会影响现有通信方式的方案。</p> <h2 id="服务端改造">服务端改造</h2> <p>服务端没有问题，别的框架或者开发语言的gRPC客户端可以调用基于go-micro的gRPC服务。</p> <p>一开始我测试的时候也遇到了问题，先入为主的以为protoc-gen-micro生成的服务端也有package的问题，因此还提交了个PR，然后被啪啪打脸。然后我又读了读源码，发现go-micro服务端特别巧妙的把客户端请求中的package信息擦除了，所以客户端是否传递package都没有影响，反正服务端不需要。</p> <p>服务端的注册逻辑在 plugins/server/grpc/server.go 中的 register 方法：</p> <pre><code>s := new(service) s.typ = reflect.TypeOf(rcvr) s.rcvr = reflect.ValueOf(rcvr) sname := reflect.Indirect(s.rcvr).Type().Name() ... server.serviceMap[s.name] = s</code></pre> <p>可以看到这里直接用反射获取的类型名称作为服务名称，没有package什么事。</p> <p>然后接收到客户端的gRPC请求时，go-micro又把请求中的package擦除了。这段逻辑在 plugins/server/grpc/grpc.go 中的 handler 方法中：</p> <pre><code>serviceName, methodName, err := mgrpc.ServiceMethod(fullMethod) service := g.rpc.serviceMap[serviceName]</code></pre> <p>通过 mgrpc.ServiceMethod 获取服务名称时去掉了package名称，所以客户端带不带package都没有问题。</p> <h2 id="运行效果">运行效果</h2> <p>现在把程序跑起来，试试用  protoc-gen-micro 生成的客户端访问 基于 protoc-gen-go-grpc 的服务端。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9b4105688f967028eb98a172e58da098.jpg" alt="解决go-micro与其它gRPC框架之间的通信问题"></p> <p>以上就是本文的主要内容，示例代码已经上传到Github，欢迎访问：https://github.com/bosima/go-demo/tree/main/go-micro-grpc-hello-compatible</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2276.htm">分布式缓存&#8211;缓存与数据库一致性方案</a></p>
                                        <p>下一个：<a href="/html/category/article-2278.htm">element中el-cascader的使用</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7780.htm" title="宠物粮食品牌前十名排行榜有哪些品种的狗（宠物粮种类）">宠物粮食品牌前十名排行榜有哪些品种的狗（宠物粮种类）</a></li>
                        <li class="py-2"><a href="/html/category/article-7642.htm" title="动物疫苗生产企业排行（动物疫苗生产企业排行榜最新）">动物疫苗生产企业排行（动物疫苗生产企业排行榜最新）</a></li>
                        <li class="py-2"><a href="/html/category/article-7689.htm" title="宠物领养须知怎么写好呢（宠物领养须知怎么写好呢图片）">宠物领养须知怎么写好呢（宠物领养须知怎么写好呢图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-7182.htm" title="猫咪摸它哪里最舒服（猫咪摸它哪里最舒服 分布图）">猫咪摸它哪里最舒服（猫咪摸它哪里最舒服 分布图）</a></li>
                        <li class="py-2"><a href="/html/category/article-6208.htm" title="网络迷踪是恐怖片吗（弹窗惊魂）">网络迷踪是恐怖片吗（弹窗惊魂）</a></li>
                        <li class="py-2"><a href="/html/category/article-6677.htm" title="中国宠物粮市场现状分析（宠物粮食市场）">中国宠物粮市场现状分析（宠物粮食市场）</a></li>
                        <li class="py-2"><a href="/html/category/article-6952.htm" title="猫掉毛最好的解决办法（猫掉毛最好的解决办法是什么）">猫掉毛最好的解决办法（猫掉毛最好的解决办法是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-6584.htm" title="动物疫苗价格排行前十的有哪些品种呢 动物疫苗价格排行前十的有哪些品种呢图片">动物疫苗价格排行前十的有哪些品种呢 动物疫苗价格排行前十的有哪些品种呢图片</a></li>
                        <li class="py-2"><a href="/html/category/article-7044.htm" title="动物疫苗审批管理办法最新（动物疫苗销售许可证如何办理）">动物疫苗审批管理办法最新（动物疫苗销售许可证如何办理）</a></li>
                        <li class="py-2"><a href="/html/category/article-7183.htm" title="2020年开宠物店怎么样（2020年开宠物店怎么样了）">2020年开宠物店怎么样（2020年开宠物店怎么样了）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>