<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2410.htm" />
<title>React + TypeScript + Taro前端开发小结 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">React + TypeScript + Taro前端开发小结</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<h2 id="前言">前言</h2> <p>项目到一段落，先来记录一下，本文以前端新手的角度记录React、TypeScript、Taro相关技术的开发体验以及遇到的问题和解决方法。</p> <p>之前总说要学React（这篇博客：代码使我头疼之React初学习），这次项目需要做H5前端+小程序，我终于能用上React了~</p> <p>使用React的开发框架之前就听过京东的Taro，所以就这个了，直接开码。</p> <h2 id="关于react">关于React</h2> <p>不错，感觉比Vue的模板写法自由很多，我看Taro文档的例子都是class组件，但一开始「前端带师」就推荐我用function组件，现在我全都是用function组件，react就该这么写，真香~</p> <p>因为之前写了一段时间的Flutter，所以react对我来说很亲切，至少可以无缝上手声明式UI的写法。</p> <p>不过我感觉React的生态太大，更新太快了，有点碎片化，很多第三方库官方文档都跟不上更新速度（批评一下mobx，害人不浅）</p> <p>话说一开始我看了某位知乎大V的那本React和Redux的书，应该是我太菜的原因，感觉不是很容易理解，果然技术厉害的大佬不一定教书也厉害吗~</p> <h2 id="参考资料">参考资料</h2> <ul> <li>React 入门 - 从js的角度理解 react：https://github.com/coppyC/blog/issues/16</li> </ul> <h2 id="关于typescript">关于TypeScript</h2> <p>第一次用TypeScript，不过作为日常用C#写后端的人，又处处是熟悉的感觉~</p> <p>反正比JS好用一万倍就是了，类型提示真是太棒了</p> <p>目前用得不深，后续有什么相关的我再写写博客记录一下。</p> <h3 id="参考资料-1">参考资料</h3> <ul> <li>探索 TypeScript 类型注解 - 自定义类型：https://github.com/WowBar/blog/issues/9</li> </ul> <h2 id="taro框架使用感受">Taro框架使用感受</h2> <p>框架是个好框架，不过文档方面感觉还不是很完善，有些地方写得不是很清楚，感觉很多文档都是复制了微信小程序的文档来的，对于没开发过微信小程序且没读过微信官方文档的人来说，不是很友好。（不过官方文档还是要看，不看的话遇到很多问题都查不到的）</p> <p>然后Taro官方提供了一个UI库，叫TaroUI，用的话还是能用的，就是更新太慢了，它的github项目主页 显示上次更新时间还是去年（2021年）6月份，到现在近一年时间没动过了。最新稳定版本还在2.x，而Taro框架已经更新到3版本了。</p> <p>因为我用的Taro框架是3.x版本，所以只能硬着头皮上TaroUI 3的beta版本，导致遇到了一些奇奇怪怪的问题，头大。</p> <p>除了TaroUI这个界面库，Taro官方还提供另一个叫NutUI 的库，不过是基于Vue的，我这个项目没法用，这个库就更新挺勤快的，github上最近更新还是6小时前，Star也有4.2k，比TaroUI的3.9k多。~~（看来React在京东不受待见呀<sub>）</sub>~。</p> <p>我还看到有一个叫Taroify 的UI库，看起来好像不错，更新也很勤快，不过GitHub Stars只有300多，不敢用~ 下次来试试看</p> <p>用的同时我还参考了这些项目/代码/文档：</p> <ul> <li>https://github.com/NervJS/taro-v2ex/blob/react/src/pages/thread_detail/thread_detail.tsx</li> <li>https://github.com/wuba/Taro-Mortgage-Calculator</li> <li>https://github.com/NervJS/awesome-taro</li> </ul> <p>接下来进入正题，总体说说遇到的一些问题/坑，以及解决方案。</p> <h2 id="页面路由问题">页面路由问题</h2> <p>Taro封装了路由相关的方法，我是做完了项目有时间去翻一下微信小程序文档 才发现这玩意跟小程序的路由特别像。</p> <blockquote> <p>PS：我讨厌这种路由设计，不知道小程序这样是哪个人才想出来的，页面多了的话不太好维护啊~</p> </blockquote> <p>在<code>app.config.ts</code> 文件里把路由配置好，类似这样：</p> <pre><code class="language-typescript">export default defineAppConfig({   pages: [     'pages/index/index',     'pages/info/place',     'pages/supply/index',     'pages/user/login',   ],   window: {     backgroundTextStyle: 'light',     navigationBarBackgroundColor: '#fff',     navigationBarTitleText: 'WeChat',     navigationBarTextStyle: 'black'   }, })</code></pre> <p>然后要跳转的地方就用<code>Taro.navigateTo({url: 'pages/user/login'})</code> 就行了</p> <p>这里有个很坑的地方！Taro的热更新不完善，添加了新页面后热更新是不生效的，必须<code>yarn dev:h5</code> 重启才能看到效果，一开始我被坑得嗷嗷叫~</p> <h2 id="地址参数问题">地址参数问题</h2> <p>这个问题在我之前的博客：Django + Taro 前后端分离项目实现企业微信登录 有提到，Taro本身提供了<code>useRouter()</code> 来给我们读取地址里的参数</p> <p>比如上面那个路由跳转的地方我们加上了参数：<code>Taro.navigateTo({url: 'pages/user/login?title=hello'})</code></p> <p>那我们在<code>pages/user/login</code> 页面里要获取参数就是这样</p> <pre><code class="language-typescript">import {useEffect} from "react" import {useRouter} from "@tarojs/taro"  export default function () {     const router = useRouter()          useEffect(() => {         console.log(router.params.title)     }, []) }</code></pre> <p>但当在读取微信登录服务器回调参数的时候，就不行，就取不出来，得自己拿完整链接<code>window.location.href</code> 去匹配。详见我这篇博客：Django + Taro 前后端分离项目实现企业微信登录</p> <h2 id="tarorelaunch不会清除url">Taro.relaunch不会清除URL</h2> <p>这看起来不是什么大问题，不过也导致了一个小bug，就是我在使用微信登录后，注销登录的时候不会清除地址里的code，这样没关闭页面的情况下，再次使用微信登录，那个code还是旧的，就直接报错了~</p> <h2 id="taroui-form的bug">TaroUI form的bug</h2> <p>说实话我不知道这是哪里的问题</p> <p>只有一个页面出现了这个问题，在最后一个输入框按回车，表现是form提交，但其实也没提交，并且页面变成重新刷新了</p> <p>百思不得其解</p> <p>我只好在最后面再加了一个隐藏的input</p> <pre><code class="language-tsx"> {     }}     disabled={true}     border={false}     style={{display: 'none'}}/></code></pre> <h2 id="网络请求封装">网络请求封装</h2> <p>Taro框架自带了<code>Taro.request</code> 可以用来请求，不过我用的时候很奇怪一直提示跨域，因为前期时间很赶，我就没去深入，直接换成我之前vue项目封装好的axios，果然还是axios好用~</p> <p>（不过之后做成小程序的话，应该还是得重构一下，据说小程序不支持formdata）</p> <h2 id="封装usestate">封装useState</h2> <p>感谢「前端带师<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/coppyC"  target="_blank" rel="nofollow">coppy」提供的代码~</p> <pre><code class="language-ts">import {useState} from 'react'  export default function useYourState<T extends {}>(state: T): [T, (state: Partial<T>) => void] {   const [_state, _setState] = useState(state);   return [     _state,     (state: Partial<T>) => {       _setState((_state) => {         return {           ..._state,           ...state         };       });     }   ]; }</code></pre> <p>这样就不需要每次setState都需要加<code>...state</code>了</p> <p>使用前：</p> <pre><code class="language-js">import {useState} from 'react'  export const LoginPage = observer(() => {   const [state, setState] = useState({     username: '',     password: '',   })      setState({       ...state,       username: '', password: ''   }) }</code></pre> <p>使用后：</p> <pre><code class="language-typescript">import useYourState from "@/utils/coppy_state";  export const LoginPage = observer(() => {   const [state, setState] = useYourState({     username: '',     password: '',   })      setState({       username: '', password: ''   }) }</code></pre> <p>生产力获得了提高~</p> <h2 id="全局状态管理">全局状态管理</h2> <p>没去用大名鼎鼎的redux，转而使用比较简单的mobx</p> <p>但是找到的例子文档都不太行（举例，官方中文文档：https://cn.mobx.js.org/）</p> <p>最终还是寻求「前端带师」的帮助，搞定了</p> <h3 id="坑点">坑点：</h3> <ul> <li>store现在没法用装饰器了，用这个<code>makeAutoObservable</code></li> <li>不需要全局provider</li> <li>Taro官网和例子可以说是史上最坑，千万别被骗了，地址：https://taro-docs.jd.com/taro/docs/mobx/</li> <li>请用最新版的mobx和<code>mobx-react-lite</code>，别用Taro官网那个4.8版本，太老了没用</li> </ul> <h3 id="代码">代码</h3> <p>不需要全局provider包装了，直接用全局变量，当然也可以用React Context</p> <p>store定义</p> <pre><code class="language-typescript">import {makeAutoObservable} from "mobx"; import {User} from "@/models/user"; import * as auth from '@/utils/auth'  export class UserStore {   isLogin = false   user: User | null = null   token = ''    constructor() {     makeAutoObservable(this)   }    login(user: User, token: string) {     this.user = user     this.token = token     this.isLogin = true      // 保存登录数据到本地     auth.login(token, user.username)   }    logout() {     this.isLogin = false     this.user = null     this.token = ''      auth.logout()   } }  export const myUserStore = new UserStore()</code></pre> <p>组件使用</p> <pre><code class="language-tsx">import {View} from "@tarojs/components" import {AtButton} from "taro-ui"; import {observer} from "mobx-react-lite"; import {myUserStore} from "@/store/user"; import Taro from "@tarojs/taro"; import {useEffect} from "react";  export const UserPage = observer(() => {   useEffect(() => {     if (!myUserStore.isLogin) {       Taro.redirectTo({url: '/pages/user/login'})     }   }, [])    return (     <View className='py-3 px-2'>       <View className='at-article__h1'>用户中心</View>        <View className='at-article__h3 mt-1'>用户名：{myUserStore.user?.first_name}</View>        退出登录</AtButton>     </View>   )    function logout() {     myUserStore.logout()     Taro.reLaunch({url: '/pages/index/index'})   } })  export default UserPage</code></pre> <h3 id="参考资料-2">参考资料</h3> <ul> <li>官网文档：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mobx.js.org/react-integration.html"  target="_blank" rel="nofollow">https://mobx.js.org/react-integration.html</li> <li>项目地址：https://github.com/mobxjs/mobx/tree/main/packages/mobx-react</li> <li>Mobx React 初学者入门指南（掘金）：https://juejin.cn/post/6844903831726211079</li> <li>mobx 在 react 中的 类组件、函数组件、配合 hooks 的使用：https://juejin.cn/post/6873794258743066632#heading-2</li> </ul> <h2 id="json反序列化class">JSON反序列化class</h2> <p>使用这个库：https://github.com/typestack/class-transformer</p> <p>model定义，这个定义可以用JSON来生成，有很多在线工具，比如：https://apihelper.jccore.cn/jsontool</p> <pre><code class="language-typescript">export class User {   username: string   first_name: string   last_name: string   email: string   date_joined: string }</code></pre> <p>注意项目主页上的文档也是过期了的，<code>plainToClass</code>方法已过期，得用这个方法：<code>plainToInstance</code></p> <pre><code class="language-typescript">import {plainToInstance} from "class-transformer";  const user = plainToInstance(User, res.data.user) myUserStore.login(user, res.data.token)</code></pre> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2409.htm">Spring Boot项目配置Druid数据源(druid-spring-boot-starter)</a></p>
                                        <p>下一个：<a href="/html/category/article-2411.htm">MySQL EXTRACT()函数中可以使用哪种复合单位？</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-5586.htm" title="4月11日（星期二）CCTV8节目预告(4月11日星期二早安的视频)">4月11日（星期二）CCTV8节目预告(4月11日星期二早安的视频)</a></li>
                        <li class="py-2"><a href="/html/category/article-6014.htm" title="国内宠物粮上市公司有哪些公司（宠物主粮上市公司）">国内宠物粮上市公司有哪些公司（宠物主粮上市公司）</a></li>
                        <li class="py-2"><a href="/html/category/article-6722.htm" title="兰亭门票绍兴人免费吗现在(兰亭门票绍兴人免费吗多少钱)">兰亭门票绍兴人免费吗现在(兰亭门票绍兴人免费吗多少钱)</a></li>
                        <li class="py-2"><a href="/html/category/article-7091.htm" title="动物医院临床技术的英语翻译（动物医院临床技术的英语翻译是什么）">动物医院临床技术的英语翻译（动物医院临床技术的英语翻译是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-6209.htm" title="附近哪里可以领养宠物（附近哪里可以领养宠物狗）">附近哪里可以领养宠物（附近哪里可以领养宠物狗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6999.htm" title="宠物粮食批发进货渠道有哪些呢视频播放（宠物粮市场销售渠道）">宠物粮食批发进货渠道有哪些呢视频播放（宠物粮市场销售渠道）</a></li>
                        <li class="py-2"><a href="/html/category/article-4565.htm" title="吉泰连锁酒店官网 吉泰连锁酒店官网电话">吉泰连锁酒店官网 吉泰连锁酒店官网电话</a></li>
                        <li class="py-2"><a href="/html/category/article-6208.htm" title="网络迷踪是恐怖片吗（弹窗惊魂）">网络迷踪是恐怖片吗（弹窗惊魂）</a></li>
                        <li class="py-2"><a href="/html/category/article-6814.htm" title="国外动物疫苗知名企业排名（国外动物疫苗知名企业排名第一）">国外动物疫苗知名企业排名（国外动物疫苗知名企业排名第一）</a></li>
                        <li class="py-2"><a href="/html/category/article-7137.htm" title="动物疫苗的正确使用方法图片（动物疫苗接种方法有哪些）">动物疫苗的正确使用方法图片（动物疫苗接种方法有哪些）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>