<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2383.htm" />
<title>简单几步实现滑动验证码（后端验证） - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">简单几步实现滑动验证码（后端验证）</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<h1 id="lazyslidecaptcha">LazySlideCaptcha</h1> <h4 id="介绍">介绍</h4> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/pojianbing/lazy-slide-captcha"  target="_blank" rel="nofollow">LazySlideCaptcha</a>是基于.Net Standard 2.1的滑动验证码模块。项目同时提供一个基于vue2的演示<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/pojianbing/lazy-slide-captcha/tree/master/Components/vue2"  target="_blank" rel="nofollow">前端组件</a>和<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.sunseeyou.com/cropper/index.html"  target="_blank" rel="nofollow">背景图裁剪工具</a>。<br /><strong><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/pojianbing/lazy-slide-captcha"  target="_blank" rel="nofollow">【码云地址】</a> |<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/pojianbing/LazySlideCaptcha"  target="_blank" rel="nofollow">【Github 地址】</a></strong></p> <p><strong>图形验证码请移步<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/pojianbing/lazy-captcha"  target="_blank" rel="nofollow">lazy-captcha</a>。</strong></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.sunseeyou.com/"  target="_blank" rel="nofollow"><strong>在线体验点这里</strong></a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.sunseeyou.com/"  target="_blank" rel="nofollow"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/49a6279656d52ce79e6929a72350f04f.jpg" alt="简单几步实现滑动验证码（后端验证）"></a></p> <h4 id="快速开始">快速开始</h4> <ol> <li>安装</li> </ol> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.nuget.org/packages/Lazy.SlideCaptcha.Core"  target="_blank" rel="nofollow">Package Manager</a></li> </ul> <pre><code class="language-powershell">Install-Package Lazy.SlideCaptcha.Core</code></pre> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.nuget.org/packages/Lazy.SlideCaptcha.Core"  target="_blank" rel="nofollow">.NET CLI</a></li> </ul> <pre><code class="language-powershell">dotnet add package Lazy.SlideCaptcha.Core</code></pre> <ol start="2"> <li>注册并配置服务</li> </ol> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration);  // 如果使用redis分布式缓存 //builder.Services.AddStackExchangeRedisCache(options =&gt; //{ //    options.Configuration = builder.Configuration.GetConnectionString("RedisCache"); //    options.InstanceName = "captcha:"; //});</code></pre> <pre><code class="language-json">"SlideCaptcha": {     "Backgrounds": [       {         "Type": "file",         "Data": "wwwroot/images/background/1.jpg"       },       {         "Type": "file",         "Data": "wwwroot/images/background/2.jpg"       }     ]   }</code></pre> <blockquote> <p>背景图片要求尺寸要求为<strong><em>552 X 344</em></strong> , 快速开始可在<strong><em>Demo</em></strong>  项目<strong><em>wwwroot/images/background</em></strong>  下挑选。（仅用作演示，生产请自行制作。）也可以通过<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.sunseeyou.com/cropper/index.html"  target="_blank" rel="nofollow">裁剪工具</a>制作，非常简单，上传图片，拖动范围后保存自动生成<em><strong>552 X 344</strong></em> 图片。</p> </blockquote> <ol start="3"> <li>接口定义</li> </ol> <pre><code class="language-c#">[Route("api/[controller]")] [ApiController] public class CaptchaController : ControllerBase {     private readonly ICaptcha _captcha;      public CaptchaController(ICaptcha captcha)     {         _captcha = captcha;     }      /// &lt;summary&gt;     /// id     /// &lt;/summary&gt;     /// &lt;param name="id"&gt;&lt;/param&gt;     /// &lt;returns&gt;&lt;/returns&gt;     [Route("gen")]     [HttpGet]     public CaptchaData Generate()     {         return _captcha.Generate();     }      /// &lt;summary&gt;     /// id     /// &lt;/summary&gt;     /// &lt;param name="id"&gt;&lt;/param&gt;     /// &lt;returns&gt;&lt;/returns&gt;     [Route("check")]     [HttpPost]     public bool Validate([FromQuery]string id, SlideTrack track)     {         return _captcha.Validate(id, track);     } }</code></pre> <p>至此后端Api服务已搭建完成。</p> <ol start="4"> <li>前端<br /> 前端提供演示组件<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/pojianbing/lazy-slide-captcha/tree/master/Components/vue2"  target="_blank" rel="nofollow">lazy-slide-captcha</a>，可通过npm安装。Demo项目为了演示方便直接采用script直接引入方式。</li> </ol> <pre><code class="language-html">@{     ViewData["Title"] = "滑动验证码"; }  &lt;link  href="~/lib/lazy-slide-captcha/dist/lazy-slide-captcha.css" asp-append-version="true" /&gt;  &lt;style&gt;     #app {         display: flex;         align-items: center;         justify-content: center;     }      .panel {         padding: 20px;         box-shadow: inherit;         border-radius: 6px;         box-shadow: 0 0 4px 0 #999999;         margin-top: 100px;     } &lt;/style&gt;  &lt;div id="app"&gt;     &lt;div class="panel"&gt;         &lt;lazy-slide-captcha ref="captcha" :width="width" :height="height" :show-refresh="true" :fail-tip="failTip" :success-tip="successTip" @@finish="handleFinish" @@refresh="generate"&gt;&lt;/lazy-slide-captcha&gt;     &lt;/div&gt; &lt;/div&gt;   @section Scripts{     &lt;script src="~/lib/vue/vue.min.js"&gt;&lt;/script&gt;     &lt;script src="~/lib/vue/axios.min.js"&gt;&lt;/script&gt;     &lt;script src="~/lib/lazy-slide-captcha/dist/lazy-slide-captcha.umd.js"&gt;&lt;/script&gt;      &lt;script&gt;         var app = new Vue({              el: '#app',              data(){                 return {                     requestId: undefined,                     failTip: '',                     successTip: '',                     // width，height保持与552 * 344同比例即可                     width: 340,                     height: 212                 }              },              mounted(){                  this.generate()              },              methods:{                  generate(){                      // 改变内部状态，标识生成请求开始                      this.$refs.captcha.startRequestGenerate()                       axios.get('/api/captcha/gen')                        .then((response) =&gt; {                            this.requestId = response.data.id                            // 改变内部状态，标识生成请求结束，同时设定background，slider图像                            this.$refs.captcha.endRequestGenerate(response.data.backgroundImage, response.data.sliderImage)                        })                        .catch((error) =&gt; {                            console.log(error);                            // 标识生成请求结束                            this.$refs.captcha.endRequestGenerate(null, null)                        });                  },                  handleFinish(data){                      // 改变内部状态，标识验证请求开始                      this.$refs.captcha.startRequestVerify()                       axios.post(`/api/captcha/check?id=${this.requestId}`, data)                        .then((response) =&gt; {                            let success = response.data.result === 0                            // 验证失败时显示信息                            this.failTip = response.data.result == 1 ? '验证未通过，拖动滑块将悬浮图像正确合并' : '验证超时, 请重新操作'                            // 验证通过时显示信息                            this.successTip = '验证通过，超过80%用户'                            // 改变内部状态，标识验证请求结束，同时设定是否成功状态                            this.$refs.captcha.endRequestVerify(success)                             if(!success){                                 setTimeout(() =&gt; {                                     this.generate()                                 }, 1000)                            }                        })                        .catch((error) =&gt; {                          console.log(error);                          this.failTip = '服务异常，请稍后重试'                          // 标识验证请求结束                          this.$refs.captcha.endRequestVerify(false)                        });                  }              }         });     &lt;/script&gt; }</code></pre> <p>至此，一个完整的滑动验证已实现，开启服务体验吧。</p> <h4 id="配置说明">配置说明</h4> <p>支持配置文件和代码配置，同时配置则代码配置覆盖配置文件。</p> <ul> <li>配置文件</li> </ul> <pre><code class="language-c#">"SlideCaptcha": {     "ExpirySeconds": 60, // 缓存过期时长     "StoreageKeyPrefix": "", // 缓存前缀     "Tolerant": 0.02, // 容错值(校验时用，缺口位置与实际滑动位置匹配容错范围)     "Backgrounds": [ // 背景图配置       {         "Type": "file",         "Data": "wwwroot/images/background/1.jpg"       }     ],     // Templates不配置，则使用默认模板     "Templates": [       {         "Slider": {           "Type": "file",           "Data": "wwwroot/images/template/1/slider.png"         },         "Hole": {           "Type": "file",           "Data": "wwwroot/images/template/1/hole.png"         }       }     ]   }</code></pre> <ul> <li>代码配置</li> </ul> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration, options =&gt; {     options.Tolerant = 0.02f;     options.StoreageKeyPrefix = "slider-captcha";      options.Backgrounds.Add(new Resource(FileResourceHandler.TYPE, @"wwwroot/images/background/1.jpg"));     options.Templates.Add     (         TemplatePair.Create         (             new Resource(FileResourceHandler.TYPE, @"wwwroot/images/template/1/slider.png"),             new Resource(FileResourceHandler.TYPE, @"wwwroot/images/template/1/hole.png")         )     ); });</code></pre> <h4 id="扩展">扩展</h4> <ol> <li>Template自定义<br /><em><strong>Template</strong></em> 是指用于生成凹槽和拖块的图片，可通过Templates配置节点设置自定义Template。 默认五个<em><strong>Template</strong></em> （不要配置，已经包含在类库内部）如下：</li> </ol> <table> <thead> <tr> <th>slider</th> <th>hole</th> <th>slider</th> <th>hole</th> </tr> </thead> <tbody> <tr> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103627859-1678783935.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103659550-231827453.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103726605-1296193404.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103740845-23696207.png" alt="简单几步实现滑动验证码（后端验证）"></td> </tr> <tr> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103759835-187113611.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103812916-897728605.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103847502-2064096712.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103900535-1184830743.png" alt="简单几步实现滑动验证码（后端验证）"></td> </tr> <tr> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103914668-163959247.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103924414-1967061832.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td></td> <td></td> </tr> </tbody> </table> <p>禁用默认 _<strong>Template</strong>_调用DisableDefaultTemplates即可:</p> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration)     .DisableDefaultTemplates();</code></pre> <ol start="2"> <li>Validator自定义<br /> 类库提供<em><strong>SimpleValidator</strong></em> ，<em><strong>BasicValidator</strong></em> 两个实现。<br /><em><strong>SimpleValidator</strong></em> 仅位置验证，<strong><em>BasicValidator</em></strong>除位置验证外，同时对轨迹做验证。_<strong>BasicValidator</strong>由于算法的原因，容易误判，因此类库默认用<strong><em>SimpleValidator</em></strong>做为默认<em><strong>Validator</strong></em> 。<br /> 自定义<em><strong>Validator</strong></em> 继承<strong><em>BaseValidator</em></strong> ，<em><strong>BaseValidator</strong></em> 提供了基本的位置验证。</li> </ol> <p>举一个栗子：</p> <pre><code class="language-c#">public class CustomValidator: BaseValidator {     public override bool ValidateCore(SlideTrack slideTrack, CaptchaValidateData captchaValidateData)     {         // BaseValidator已做了基本滑块与凹槽的对齐验证，这里做其他验证          return true;     } }</code></pre> <p>替换默认的Validator</p> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration);     .ReplaceValidator&lt;CustomValidator&gt;();</code></pre> <ol start="3"> <li>ResourceProvider自定义<br /> 除了通过Options配置Background和Template外，你也可以通过自定义ResourceProvider的形式提供Background和Template。</li> </ol> <pre><code class="language-csharp">public class CustomResourceProvider : IResourceProvider {     public List&lt;Resource&gt; Backgrounds()     {         return Enumerable.Range(1, 10)             .ToList()             .Select(e =&gt; new Resource(Core.Resources.Handler.FileResourceHandler.TYPE, $"wwwroot/images/background/{e}.jpg"))             .ToList();     }          // 这里返回自定义的Template     public List&lt;TemplatePair&gt; Templates()     {         return new List&lt;TemplatePair&gt;();     } }</code></pre> <p>注册ResourceProvider</p> <pre><code class="language-csharp">builder.Services.AddSlideCaptcha(builder.Configuration)     .AddResourceProvider&lt;CustomResourceProvider&gt;();</code></pre> <ol start="4"> <li>自定义ResourceHandler</li> </ol> <pre><code class="language-csharp">public class UrlResourceHandler : IResourceHandler {     public const string Type = "url";      public bool CanHandle(string handlerType)     {         return handlerType == Type;     }      /// &lt;summary&gt;     /// 这里仅演示，仍然从本地读取。实际需要通过Http读取     /// &lt;/summary&gt;     /// &lt;param name="resource"&gt;&lt;/param&gt;     /// &lt;returns&gt;&lt;/returns&gt;     /// &lt;exception cref="ArgumentNullException"&gt;&lt;/exception&gt;     public byte[] Handle(Resource resource)     {         if (resource == null) throw new ArgumentNullException(nameof(resource));         return File.ReadAllBytes(resource.Data);     } }</code></pre> <p>注册ResourceHandler</p> <pre><code class="language-csharp">builder.Services.AddSlideCaptcha(builder.Configuration)     .AddResourceHandler&lt;UrlResourceHandler&gt;();</code></pre> <h4 id="项目参考">项目参考</h4> <p>项目参考了<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/tianai/tianai-captcha?_from=gitee_search"  target="_blank" rel="nofollow">tianai-captcha</a>，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/yimijianfang/vue-drag-verify"  target="_blank" rel="nofollow">vue-drag-verify</a>非常优秀的项目，非常感谢。</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2382.htm">Docker基础DockerFile文件详解</a></p>
                                        <p>下一个：<a href="/html/category/article-2384.htm">编译python(cpython)的源码及其用途</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2514.htm" title="Vue学习笔记6 &#8211; 学习vue-admin-template(1)">Vue学习笔记6 &#8211; 学习vue-admin-template(1)</a></li>
                        <li class="py-2"><a href="/html/category/article-2507.htm" title="防止重复提交拦截器 spring boot">防止重复提交拦截器 spring boot</a></li>
                        <li class="py-2"><a href="/html/category/article-2497.htm" title="PHP表达式详解">PHP表达式详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2525.htm" title="自研FeignClient轻量级http客户端">自研FeignClient轻量级http客户端</a></li>
                        <li class="py-2"><a href="/html/category/article-2511.htm" title="vue3.0 elementUI实现上传文件的暂停继续功能">vue3.0 elementUI实现上传文件的暂停继续功能</a></li>
                        <li class="py-2"><a href="/html/category/article-2509.htm" title="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具">python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2523.htm" title="ElementUI el-upload 断点续传文件">ElementUI el-upload 断点续传文件</a></li>
                        <li class="py-2"><a href="/html/category/article-2515.htm" title="Java中Stack.peek()与Stack.pop()与Queue.poll的区别">Java中Stack.peek()与Stack.pop()与Queue.poll的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-2488.htm" title="一文搞定数据库连接池，太TM简单了，收藏！！！">一文搞定数据库连接池，太TM简单了，收藏！！！</a></li>
                        <li class="py-2"><a href="/html/category/article-2528.htm" title="算法：在一个集合中选取所有符合条件的元素组合">算法：在一个集合中选取所有符合条件的元素组合</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>