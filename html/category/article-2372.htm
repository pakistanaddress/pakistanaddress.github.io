<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2372.htm" />
<title>javascript删除数组元素的7个方法 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">javascript删除数组元素的7个方法</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<div id="content_views" class="htmledit_views"> <div id="cnblogs_post_body" class="blogpost-body"> <p>在JavaScript中，除了Object之外，Array类型（数组）恐怕就是最常用的类型了。与其他语言的数组相比，JavaScript中的Array非常灵活。这种灵活性有利有弊，好处是其富有创造性，可以提供各种灵活的解决方案；坏处是容易脑子不够用，因为事实上，它太灵活了，灵活到无法控制的抓狂。</p> <p>前面调侃了几句，回归正题，这里要总结7个在JavaScript中删除Array元素的方法，分别是利用length属性、delete关键字、pop()栈方法、shift()队列方法、splice()操作方法、forEach()或filter()迭代方法和prototype原型方法。</p> <p><strong>length属性</strong></p> <p>JavaScript中Array的length属性非常有特点一一它不是只读的。因此，可以通过设置这个属性来达到从数组的末尾移除项或添加新项的目的。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"];<span style="color:#008000;">//</span><span style="color:#008000;"> 创建一个包含3个字符串的数组</span> colors.length = 2<span style="color:#000000;">;<br/>console.log(colors[</span>2]);<span style="color:#008000;">//</span><span style="color:#008000;"> undefined</span></pre> </div> <p><strong>delete关键字</strong></p> <p>JavaScript提供了一个delete关键字用来删除（清除）数组元素。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey", "green"<span style="color:#000000;">];</span><span style="color:#0000ff;">delete</span> colors[0<span style="color:#000000;">];  console.log(colors);</span><span style="color:#008000;">//</span><span style="color:#008000;"> [undefined, "blue", "grey", "green"]</span></pre> </div> <p>要注意的是，使用delete删除元素之后数组长度不变，只是被删除元素被置为undefined了。</p> <p><strong>pop()栈方法</strong></p> <p>JavaScript中的Array对象提供了一个pop()栈方法用于弹出并返回数组中的最后一项，某种程度上可以当做删除用。</p> <p>栈数据结构的访问规则是FILO（First In Last Out，先进后出），栈操作在栈顶添加项，从栈顶移除项，使用pop()方法，它能移除数组中的最后一项并返回该项，并且数组的长度减1。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"<span style="color:#000000;">];</span><span style="color:#0000ff;">var</span> color =<span style="color:#000000;"> colors.pop();  console.log(color);</span><span style="color:#008000;">//</span><span style="color:#008000;"> "grey"</span> console.log(colors.length);<span style="color:#008000;">//</span><span style="color:#008000;"> 2</span></pre> </div> <p>可以看出，在调用pop()方法时，数组返回最后一项，即”grey”，数组的元素也仅剩两项。</p> <p><strong>shift()队列方法</strong></p> <p>JavaScript中的Array对象提供了一个shift()队列方法用于弹出并返回数组中的第一项，某种程度上也可以当做删除用。</p> <p>队列数据结构的访问规则是FIFO（First In First Out，先进先出），队列在列表的末端添加项，从列表的前端移除项，使用shift()方法，它能够移除数组中的第一个项并返回该项，并且数组的长度减1。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"<span style="color:#000000;">];</span><span style="color:#0000ff;">var</span> color =<span style="color:#000000;"> colors.shift();  console.log(color);</span><span style="color:#008000;">//</span><span style="color:#008000;"> "red"</span> console.log(colors.length);<span style="color:#008000;">//</span><span style="color:#008000;"> 2</span></pre> </div> <p>可以看出，在调用shift()方法时，数组返回第一项，即”red”，数组的元素也仅剩两项。</p> <p><strong>splice()操作方法</strong></p> <p>在JavaScript的Array对象中提供了一个splice()方法用于对数组进行特定的操作。splice()恐怕要算最强大的数组方法了，他的用法有很多种，在此只介绍删除数组元素的方法。在删除数组元素的时候，它可以删除任意数量的项，只需要指定2个参数：要删除的第一项的位置和要删除的项数。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"<span style="color:#000000;">];</span><span style="color:#0000ff;">var</span> color = colors.splice(0, 1<span style="color:#000000;">);  console.log(color);</span><span style="color:#008000;">//</span><span style="color:#008000;"> "red"</span> console.log(colors);<span style="color:#008000;">//</span><span style="color:#008000;"> ["blue", "grey"]</span></pre> </div> <p>可以看出，在调用了splice(0, 1)方法时，数组从第一项开始，删除了一项。</p> <p><strong>迭代方法</strong></p> <p>所谓的迭代方法就是用循环迭代数组元素，发现符合要删除的项则删除。用的最多的地方，可能是当数组中的元素为对象的时候，可以根据对象的某个属性（例如ID）来删除数组元素。</p> <p>第一种用最常见的ForEach循环来对比元素找到之后将其删除。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"<span style="color:#000000;">];  colors.forEach(</span><span style="color:#0000ff;">function</span><span style="color:#000000;">(item, index, arr) {</span><span style="color:#0000ff;">if</span>(item === "red"<span style="color:#000000;">) {         arr.splice(index,</span>1<span style="color:#000000;">);     } });</span></pre> </div> <p>可以看到这里还要配合splice()方法去实现删除，循环只是为了找到特定的元素。另外一种思路是循环将不需要删除的元素推入到新的数组中，也能达到假性删除特定元素的目的。</p> <p>第二种我们用循环中的filter方法。</p> <div class="cnblogs_code"> <pre><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"<span style="color:#000000;">];  colors</span>= colors.filter(<span style="color:#0000ff;">function</span><span style="color:#000000;">(item) {</span><span style="color:#0000ff;">return</span> item != "red"<span style="color:#000000;"> });   console.log(colors);</span><span style="color:#008000;">//</span><span style="color:#008000;"> ["blue", "grey"]</span></pre> </div> <p>代码很简单，找出元素不是red的项数返回给colors（其实是得到了一个新的数组，并不是在原数组上进行删除操作），一定程度上也算是达到了删除特定元素的目的。</p> <p><strong>prototype原型方法</strong></p> <p>可以通过在Array的原型上添加方法来达到删除的目的。</p> <div class="cnblogs_code"> <pre>Array.prototype.remove =<span style="color:#0000ff;">function</span><span style="color:#000000;">(dx) {</span><span style="color:#0000ff;">　　if</span>(isNaN(dx) || dx &gt;<span style="color:#0000ff;">this</span><span style="color:#000000;">.length){</span><span style="color:#0000ff;">return</span><span style="color:#0000ff;">false</span><span style="color:#000000;">; 　　}</span><span style="color:#0000ff;">for</span>(<span style="color:#0000ff;">var</span> i = 0, n = 0; i &lt;<span style="color:#0000ff;">this</span>.length; i++<span style="color:#000000;">) {</span><span style="color:#0000ff;">if</span>(<span style="color:#0000ff;">this</span>[i] !=<span style="color:#0000ff;">this</span><span style="color:#000000;">[dx]) {</span><span style="color:#0000ff;">　　　　　　this</span>[n++] =<span style="color:#0000ff;">this</span><span style="color:#000000;">[i]; 　　　　} 　　}</span><span style="color:#0000ff;">　　this</span>.length -= 1<span style="color:#000000;">; };</span><span style="color:#0000ff;">var</span> colors = ["red", "blue", "grey"<span style="color:#000000;">]; colors.remove(</span>1<span style="color:#000000;">);<br/>console.log(colors);</span><span style="color:#008000;">//</span><span style="color:#008000;">["red", "grey"]</span></pre> </div> <p>这种方法其实就是自己实现一个删除的逻辑，然后把删除方法添加给了Array的原型对象，则在此环境中的所有Array对象都可以使用该方法。尽管可以这么做，但是不推荐在产品化的程序中修改原生对象的原型。道理很简单，如果只是某个实现中缺少某个方法，就在原生对象的原型中添加这个方法，那么当在另一个支持该方法的实现中运行代码时，就可能导致命名冲突。而且这样做可能会意外地导致原生方法被重写。</p> <p>"别人稍一注意你，你就敞开心扉，你觉得这是坦率，其实往往是因为孤独。"</p> </div> <p>转载于:https://www.cnblogs.com/yanggb/p/11464821.html</p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2371.htm">LVGL PC模拟器安装步骤详解_安装教程</a></p>
                                        <p>下一个：<a href="/html/category/article-2373.htm">SSM框架-SpringMVC详解</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2512.htm" title="测试开发该如何在团队中推广新工具和新技术">测试开发该如何在团队中推广新工具和新技术</a></li>
                        <li class="py-2"><a href="/html/category/article-2523.htm" title="ElementUI el-upload 断点续传文件">ElementUI el-upload 断点续传文件</a></li>
                        <li class="py-2"><a href="/html/category/article-2520.htm" title="Jav详细介绍的Mapper对应的Mybatis xml查询结果resultType返回值类型">Jav详细介绍的Mapper对应的Mybatis xml查询结果resultType返回值类型</a></li>
                        <li class="py-2"><a href="/html/category/article-2483.htm" title="setTimeout、Promise、Async/Await 的区别">setTimeout、Promise、Async/Await 的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-2484.htm" title="Gin-使用GORM操作mysql 数据库">Gin-使用GORM操作mysql 数据库</a></li>
                        <li class="py-2"><a href="/html/category/article-2517.htm" title="C#关键字Check简单介绍_C#教程">C#关键字Check简单介绍_C#教程</a></li>
                        <li class="py-2"><a href="/html/category/article-2473.htm" title="可以使用哪个MySQL函数找出字符串的长度（以位为单位）？">可以使用哪个MySQL函数找出字符串的长度（以位为单位）？</a></li>
                        <li class="py-2"><a href="/html/category/article-2515.htm" title="Java中Stack.peek()与Stack.pop()与Queue.poll的区别">Java中Stack.peek()与Stack.pop()与Queue.poll的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-2479.htm" title="pythonmysql查询转list_python 解决mysql where in 对列表(list,,array)问题">pythonmysql查询转list_python 解决mysql where in 对列表(list,,array)问题</a></li>
                        <li class="py-2"><a href="/html/category/article-2485.htm" title="PDB调试方法">PDB调试方法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">46</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>