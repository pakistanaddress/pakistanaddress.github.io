<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2382.htm" />
<title>Docker基础DockerFile文件详解 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">Docker基础DockerFile文件详解</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<div class="toc"> <div class="toc-container-header"><span style="font-size: 1.5em;">1、DockerFile文件说明</span></div> </div> <p><strong>（1）DockerFile文件是什么</strong></p> <p>Dockerfile是用来构建Docker镜像的文本文件，文本内容包含了一条条构建镜像所需的指令、参数和说明。</p> <p>即：Dockerfile仅仅是用来制作镜像的源码文件，也可以说成是一个脚本文件。</p> <p><strong>（2）如何查看Docker Hub中镜像的Dockerfile文件</strong></p> <p>进入Docker Hub官网：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://hub.docker.com/"  target="_blank" rel="nofollow">https://hub.docker.com/</a></p> <p>我们以CentOS镜像为例。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7275d543906c33622911aa7b4026f7fa.jpg" alt="Docker基础DockerFile文件详解"></p> <p>点击进入镜像，在<code>Supported tags and respective Dockerfile links</code>：支持的标签和相应的Dockerfile链接。</p> <p>如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/aef63030aacbf0b96ca3389482796f56.jpg" alt="Docker基础DockerFile文件详解"></p> <p>点击对应的版本，就会跳转到GitHub中存放CentOS的Dockerfile文件网站，如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7c162c772bfc9e749d5c16789f780def.jpg" alt="Docker基础DockerFile文件详解"></p> <p>我们就能够查看镜像对应的Dockerfile文件内容了。</p> <h2 id="2dockerfile构建过程解析">2、Dockerfile构建过程解析</h2> <h3 id="1docker容器构建三步骤">（1）Docker容器构建三步骤</h3> <ul> <li>手动编写一个Dockerfile文件，当然必须要符合<code>file</code>的规范。（编写）</li> <li>有了Dockerfile文件后，直接执行<code>docker build</code>命令，在本地获得一个自定义的Docker镜像。（构建）</li> <li>通过<code>docker run</code>命令启动镜像，获得Docker容器。（运行）</li> </ul> <h3 id="2dockerfile文件的基本结构">（2）Dockerfile文件的基本结构</h3> <p>Dockerfile 一般分为：基础镜像、镜像元信息（作者等信息）、镜像操作指令和容器启动时执行指令。</p> <p>我们以CentOS镜像的Dockerfile文件为例，如下：</p> <pre><code class="language-dockerfile"># 1.基础镜像 FROM scratch  # 2.镜像元信息 MAINTAINER https://github.com/CentOS/sig-cloud-instance-images  # 3、镜像操作指令和参数（重点） ADD centos-6-docker.tar.xz /  LABEL org.label-schema.schema-version="1.0" \     org.label-schema.name="CentOS Base Image" \     org.label-schema.vendor="CentOS" \     org.label-schema.license="GPLv2" \     org.label-schema.build-date="20181006"  # 4.容器启动时执行指令 CMD ["/bin/bash"]</code></pre> <blockquote> <p>提示：</p> <ul> <li>Dockerfile文件中的注释为<code>#</code>。</li> <li><code>FROM scratch</code>：为所有镜像的基础镜像。</li> <li><code>LABEL</code>指令用来给镜像以键值对的形式添加一些元数据（<code>metadata</code>）。其实就是一些标签，可以在<code>inspect</code>命令中看到。</li> <li>很多官方镜像都是基础包，很多功能没有，我们通常会自己搭建自己的镜像！</li> </ul> </blockquote> <h3 id="3dockerfile注意事项">（3）Dockerfile注意事项</h3> <ul> <li>每条保留字指令都必须为大写字母，且后面要跟随至少一个参数，即不能为空。</li> <li>指令按照从上到下，顺序执行。</li> <li>每条指令都会创建一个新的镜像层，并对镜像进行提交。</li> </ul> <h3 id="4docker执行dockerfile的大致流程">（4）Docker执行Dockerfile的大致流程</h3> <ol> <li>Docker从基础镜像运行一个容器。</li> <li>执行一条指令并对容器作出修改。</li> <li>执行类似<code>docker commit</code>的操作，来提交一个新的镇像层。</li> <li>Docker再基于刚提交的镜像运行一个新容器。</li> <li>执行Dockerfile中的下一条指令，依次循环上面步骤，直到所有指令都执行完成。</li> </ol> <h2 id="3总结">3、总结</h2> <p>从应用软件的角度来看，Dockerfile、Docker镜像与Docker容器分别代表软件的三个不同阶段，</p> <ol> <li>Dockerfile是软件的原材料。</li> <li>Docker镜像是软件的交付品。</li> <li>Docker容器则可以认为是软件的运行态。</li> </ol> <p>Dockerfile面向开发，Docker镜像成为交付标准，Docker容器则涉及部署与运维，三者缺一不可，合力充当Docker体系的基石。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7d7480b844b2f844e7c33244c5a7db7b.jpg" alt="Docker基础DockerFile文件详解"></p> <p><strong>说明：</strong></p> <ul> <li><code>Dockerfile</code>：Dockerfile定义了进程需要的一切东西。Dockerfile涉及的内容包括执行代码或者是文件、环境变量、依赖包、运行时环境、动态链接库、操作系统的发行版、服务进程和内核进程（当应用进程需要和系统服务和内核进程打交道，这时需要考虑如何设计<code>namespace</code>的权限控制）等等。</li> <li><code>Docker镜像</code>：通过定义好的Dockerfile文件，执行<code>docker build</code>命令，会生成一个Docker镜像，当运行Docker镜像时，会真正开始提供服务。</li> <li><code>Docker容器</code>：容器是直接提供服务。</li> </ul> <h2 id="4dockerfile保留字指令">4、DockerFile保留字指令</h2> <ul> <li><code>FROM</code>：基础镜像，当前新镜像是基于哪个镜像的。</li> <li><code>MAINTAINER</code>：镜像维护者的姓名和邮箱地址。</li> <li><code>RUN</code>：容器构建时需要运行的命令。</li> <li><code>EXPOSE</code>：当前容器对外暴露出的端口（端口映射）。</li> <li><code>WORKDIR</code>：指定在创建容器后，终端默认登陆进来的工作目录，一个落脚点，也就是<code>pwd</code>的位置。</li> <li><code>ENV</code>：用来在构建镜像过程中设置环境变量。 <pre><code class="language-dockerfile">ENV MY_PATH /usr/mytest  # 这个环境变量可以在后续的任何RUN指令中使用，这就如同在命令前面，指定了环境变量前缀一样；也可以在其它指令中直接使用这些环境变量。 # 比如使用如下方式在DockerFile中使用： WORKDIR $MY_PATH</code></pre> </li> <li><code>ADD</code>：将宿主机目录下的文件拷贝进镜像（添加内容），且<code>ADD</code>命令会自动处理<code>URL</code>和解压<code>tar</code>压缩包。</li> <li><code>COPY</code>：类似<code>ADD</code>，拷贝文件和目录到镜像中。没有解压功能。<br /> 将从构建上下文目录中&lt;源路径&gt;的文件/目录，复制到新一层的镜像内的&lt;目标路径&gt;位置。<br /> 两种写法：</p> <ul> <li><code>COPY src dest</code></li> <li><code>COPY ["src", "dest"]</code></li> </ul> </li> <li><code>VOLUME</code>：容器数据卷，用于数据的保存和持久化工作。</li> <li><code>CMD</code>：指定一个容器启动时要运行的命令。<br /><code>CMD</code>指令的格式和RUN相似，也是两种格式：<br /><code>shell</code>格式：<code>CMD &lt;命令&gt;</code><br /><code>exec</code>格式：<code>CMD ["可执行文件"，"参数1"，"参数2"...]</code><br /> 参数列表格式：<code>CMD ["参数1"，"参数2"...]</code>，在指定了<code>ENTRVPOINT</code>指令后，用<code>CMD</code>指定具体的数。<br /><strong>重点提示：</strong>Dockerfile中可以有多个<code>CMD</code>指令，但只有最后一个生效，<code>CMD</code>也会被<code>docker run</code>之后的参数替换。</li> <li><code>ENTRYPOINT</code>：指定一个容器启动时要运行的命令。<br /><code>ENTRYPOINT</code>的目的和<code>CMD</code>一样，都是在指定容器启动程序及参数，<br /> 但是<code>ENTRYPOINT</code>不会被<code>docker run</code>之后的参数替换，会进行追加。</li> <li><code>ONBUILD</code>：当构建一个被继承的Dockerfile时运行命令，父镜像在被子继承后，父镜像的<code>onbuild</code>被触发（触发指令，类似一个触发器）</li> </ul> <p>DockerFile常用指令如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/23fa8031ccfd26bb6f69f65784e42ac5.jpg" alt="Docker基础DockerFile文件详解"></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2381.htm">异步请求与中断 ( XHR,Axios,Fetch对比 )</a></p>
                                        <p>下一个：<a href="/html/category/article-2383.htm">简单几步实现滑动验证码（后端验证）</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2519.htm" title="微信小程序自定义顶部导航栏防止出现内容显示不全和出现空白">微信小程序自定义顶部导航栏防止出现内容显示不全和出现空白</a></li>
                        <li class="py-2"><a href="/html/category/article-2500.htm" title="JavaScript 进阶第二章（循环结构 ）">JavaScript 进阶第二章（循环结构 ）</a></li>
                        <li class="py-2"><a href="/html/category/article-2515.htm" title="Java中Stack.peek()与Stack.pop()与Queue.poll的区别">Java中Stack.peek()与Stack.pop()与Queue.poll的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-2509.htm" title="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具">python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2546.htm" title="SpringBoot整合 &#8211; 依赖以及配置文件">SpringBoot整合 &#8211; 依赖以及配置文件</a></li>
                        <li class="py-2"><a href="/html/category/article-4418.htm" title="动物医院运营管理工作内容怎么写（动物医院管理流程）">动物医院运营管理工作内容怎么写（动物医院管理流程）</a></li>
                        <li class="py-2"><a href="/html/category/article-3439.htm" title="PYQT5(13)-基本窗口控件-拖曳与剪贴板">PYQT5(13)-基本窗口控件-拖曳与剪贴板</a></li>
                        <li class="py-2"><a href="/html/category/article-2839.htm" title="springboot之依赖版本管理">springboot之依赖版本管理</a></li>
                        <li class="py-2"><a href="/html/category/article-4339.htm" title="怀孕了让猫挠了轻微出血有事吗要打针吗有事吗（怀孕让猫抓了一下有红印）">怀孕了让猫挠了轻微出血有事吗要打针吗有事吗（怀孕让猫抓了一下有红印）</a></li>
                        <li class="py-2"><a href="/html/category/article-3137.htm" title="[转]图解分布式一致性协议Paxos">[转]图解分布式一致性协议Paxos</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>