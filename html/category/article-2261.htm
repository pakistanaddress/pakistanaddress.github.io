<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <link rel="canonical" href="https://pakistanaddress.github.io/html/category/article-2261.htm" />
<title>kubectl 远程访问内网中的 kubernetes 集群 - Pakistan Address</title>
<!-- for-mobile-apps -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="/assets/addons/xcblog/img/pakistanaddress/favicon.ico" type="image/x-icon"/>
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
		function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- //for-mobile-apps -->
<link href="/assets/addons/xcblog/css/pakistanaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
<link href="/assets/addons/xcblog/css/pakistanaddress/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- js -->
<script type="text/javascript" src="/assets/addons/xcblog/js/frontend/pakistanaddress/jquery-2.1.4.min.js"></script>
<!-- //js -->
<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
<!-- start-smoth-scrolling -->
<script type="text/javascript">
	jQuery(document).ready(function($) {
		$(".scroll").click(function(event){		
			event.preventDefault();
			$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
		});
	});
</script>
<!-- start-smoth-scrolling -->
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?21f4e50ed805b3a1bd1374e6b345c04a";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">Pakistan Address</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/html/category/">文章分类</a></li>
														<li><a href="#">关于</a></li>
							<li><a href="#">联系</a></li>
						</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">kubectl 远程访问内网中的 kubernetes 集群</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/html/category/">文章分类</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                <div class="wthree_single_grid1">
                      				  				  				<div id="content_views" class="markdown_views prism-atelier-sulphurpool-light"> <p>之前自己在三台阿里云服务器上搭建了一套 kubernetes 集群，因为在是在内网中，所以每次部署都要先将 yaml 文件 scp 到 master 服务器上，再自己手动 ssh 到 master 上用 kubectl 执行部署命令，很是不方便。网上找了些资料，配置了下kubectl 远程访问内网k8s， 这篇文章记录下配置的细节。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/746891654328a59f4ceb41ff0c04a89f.jpg" alt="kubectl 远程访问内网中的 kubernetes 集群"></p> <p>scp 把集群上 kubectl 的配置拷贝到本地电脑。集群中 kubectl 的配置都存放在，<code>~/.kube/config</code> 文件中，将该文件拷贝到本地的<code>~/.kube</code>目录下。（在本地电脑安装 kubectl 后，会自动创建该目录）。</p> <pre><code class="prism language-bash"><span class="token function">scp</span> master.aliyun:.kube/config ~/Downloads/<span class="token function">cp</span> ~/Downloads/config ~/.kube/</code></pre> <p>此时如果在本地电脑执行<code>kubectl get pods</code> 是没有反应的，因为 config 文件中的 server 是内网 IP。所以需要将 server IP 该成公网 IP：<code>39.105.17.56</code> ，而且需要打开集群的<code>6443</code> 端口做映射。</p> <pre><code class="prism language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">clusters</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">cluster</span><span class="token punctuation">:</span><span class="token key atrule">certificate-authority-data</span><span class="token punctuation">:</span> LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EWXhOakV5TXpZeU1Gb1hEVE13TURZeE5ERXlNell5TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEQzCmo2Mml3RjR5ZnNscFkwYm9LTjZSVFMvRFF3TlBWVzdUNnFpMnJWelMwWW9QNXRVNDZrZk9TV0hkZnJyNEdlZXgKQm02RHR5MWo3Q2UzemdTdVpGL1lJYXN5MVFQdnBrZktVczk2MHNCMThYMlFaN0JnZUF4a2FHR0JpVlc1SWlIeApoNmNPVkUrb003V0gwSjdPRXQ3eVo3TzF2MjNreGxZWXhwUWE3aDY3Rk4ybnRqeUE2UjVaYU9RaE85a3VscEcxCllpK2s4NGVXVklOWHBJdDk4NzgvMkFVN3Q3QlhFTWpDMkM0TG95RG1qa1FsZU9wZUVGbXJKZzNoaFNaMmp0YmgKUWxZV3RhMjFsOVp3S3ZIQlllb1A2aDUrR1Nnd2pPVWVUQnJEcTNYZWdxL2FacHJIaDMrWGs3N09ZUStSM2hzawo2U0gvMzRuTWFtcEozMkpMalU4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKSERQdHM1VHZlS2RkM2pIYnAwVnp0ZDBJbU0KT09SZUdGWGdlcG5xbVBFYmNsNDZhTmpDU3R5MlFyRW5UNitZUFdwbmVIendpNW1jMkxHSHpxUTA1VDgwR2NhZwo5SzdnV3V4SW9jZDNDZmlOTDF6ekVEcGlrRUliVDZyWTRENTBUcklVQjdEOUdNMTZYa242UWVYUkJnc2RDckprCmloZ01Mc05iOWJxamJROW5jaHMybXFET0tXZEtveHVrelZleUxSL0ZobVlKcFByOHJYc2NqV3JvOXVvMGs5eGEKY2lCaTRHQzBsd3VHaXl6aWtuTnpYZ2k1L3E1ckJtWHJ1R01VUUdXYVZjbTIwQXNIRitLZlF6UDhsS0t2T2t6bQp2N2RuMGMzRUtURW83RFdDYkxjeHlqTXlQUDg1VkVjaXZnVXhQWEUzYkpJZmpxVGJtU1lwS3lDb0xSUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=<span class="token key atrule">server</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//172.17.43.150<span class="token punctuation">:</span><span class="token number">6443</span><span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes</code></pre> <p>修改后的第 5 行：</p> <pre><code class="prism language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//39.105.17.56<span class="token punctuation">:</span><span class="token number">6443</span></code></pre> <p>在阿里云集群的安全组访问规则中打开 6443 端口。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/85a4613cec91e387f42122fe9174599b.jpg" alt="kubectl 远程访问内网中的 kubernetes 集群"></p> <p>这会如果在本地电脑执行<code>kubectl get pods</code> 也会提示报错，报错提示的意思是： 39.105.17.56 使用当前证书访问 api server 是无效的，当前证书只能用于 172.17.43.150 访问 api-server。很明显外网访问内网中的 k8s 集群 TLS 校验没通过。</p> <p>有两种解决办法：</p> <p>第一种，直接跳过 TLS 校验，使用很简单，但总觉得有点”奇技淫巧“的味道。</p> <pre><code class="prism language-bash">kubectl --insecure-skip-tls-verify get pods</code></pre> <p>采用<code>--insecure-skip-tls-verify</code> 选项执行命令就可以避开校验直接操作 k8s 集群。</p> <p>第二种，修改集群中 api server 的证书，操作相对第一种繁琐些，但是真正彻底解决问题。</p> <p>我是用 kubeadm 安装的 k8s，minikube用这种方式能否 work 我没有测试过。kubeadm 在创建 k8s 集群的同时也生成了集群所需的全部证书，并将其存放在 master 的<code>/etc/kubernetes/pki</code> 路径下。</p> <pre><code class="prism language-bash"><span class="token function">ls</span> /etc/kubernetes/pki<span class="token operator">|</span><span class="token function">grep</span> apiserver</code></pre> <pre><code class="prism language-bash">apiserver-etcd-client.crt apiserver-etcd-client.key apiserver-kubelet-client.crt apiserver-kubelet-client.key apiserver.crt apiserver.key</code></pre> <p>我们要修改的就是：<code>apiserver.crt</code> 和<code>apiserver.key</code> ，说是修改，实际上是使用 kubeadm 重新生成这两个文件。</p> <p>这个时候集群已经启动了，kubeadm 的配置信息都放在 kube-system 空间下的 configmaps 中。我们需要先将configmaps 中的信息保存到 master 上的文件中。</p> <pre><code class="prism language-bash">kubectl get configmaps -n kube-system<span class="token operator">|</span><span class="token function">grep</span> kubeadm-config kubeadm-config                       2      134d</code></pre> <p>导出信息到 master 的 yaml 文件</p> <pre><code class="prism language-bash">kubectl -n kube-system get configmap kubeadm-config -o jsonpath<span class="token operator">=</span><span class="token string">'{.data.ClusterConfiguration}'</span><span class="token operator">></span> kubeadm.yaml</code></pre> <pre><code class="prism language-bash"><span class="token function">vi</span> kubeadm.yaml</code></pre> <pre><code class="prism language-yaml"><span class="token key atrule">apiServer</span><span class="token punctuation">:</span><span class="token key atrule">extraArgs</span><span class="token punctuation">:</span><span class="token key atrule">authorization-mode</span><span class="token punctuation">:</span> Node<span class="token punctuation">,</span>RBAC<span class="token key atrule">timeoutForControlPlane</span><span class="token punctuation">:</span> 4m0s<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeadm.k8s.io/v1beta2<span class="token key atrule">certificatesDir</span><span class="token punctuation">:</span> /etc/kubernetes/pki<span class="token key atrule">clusterName</span><span class="token punctuation">:</span> kubernetes<span class="token key atrule">controllerManager</span><span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token key atrule">dns</span><span class="token punctuation">:</span><span class="token key atrule">type</span><span class="token punctuation">:</span> CoreDNS<span class="token key atrule">etcd</span><span class="token punctuation">:</span><span class="token key atrule">local</span><span class="token punctuation">:</span><span class="token key atrule">dataDir</span><span class="token punctuation">:</span> /var/lib/etcd<span class="token key atrule">imageRepository</span><span class="token punctuation">:</span> registry.aliyuncs.com/google_containers<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterConfiguration<span class="token key atrule">kubernetesVersion</span><span class="token punctuation">:</span> v1.18.3<span class="token key atrule">networking</span><span class="token punctuation">:</span><span class="token key atrule">dnsDomain</span><span class="token punctuation">:</span> cluster.local<span class="token key atrule">podSubnet</span><span class="token punctuation">:</span> 192.169.0.0/16<span class="token key atrule">serviceSubnet</span><span class="token punctuation">:</span> 10.96.0.0/12<span class="token key atrule">scheduler</span><span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span></code></pre> <p>稍稍做一点修改，将 master 的公网 IP 地址添加到里面，并保存yaml。将公网地址添加到 SAN 中，再次生成的证书。后面公网访问内网 k8s 集群时，就可以使用新证书做 TLS 校验了。</p> <pre><code class="prism language-yaml"><span class="token key atrule">apiServer</span><span class="token punctuation">:</span><span class="token key atrule">certSANs</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token string">"39.105.17.56"</span><span class="token key atrule">extraArgs</span><span class="token punctuation">:</span><span class="token key atrule">authorization-mode</span><span class="token punctuation">:</span> Node<span class="token punctuation">,</span>RBAC<span class="token key atrule">timeoutForControlPlane</span><span class="token punctuation">:</span> 4m0s<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeadm.k8s.io/v1beta2</code></pre> <p>再生成新证书前，必须先将老的证书删除。如果 kubeadm 发现目录下已经存在证书，那它就不会生成新的。</p> <pre><code class="prism language-bash"><span class="token function">mv</span> /etc/kubernetes/pki/apiserver.<span class="token punctuation">{<!-- --></span>crt,key<span class="token punctuation">}</span> ~</code></pre> <p>生成新的证书</p> <pre><code class="prism language-bash">kubeadm init phase certs apiserver --config kubeadm.yaml</code></pre> <p>新的证书产生了，还需要让 api-server 加载新证书。重启下 api-server 就可以了，最简单的方式就是把 api-server 的 container 给删了。等一会集群就会重新创建个新的 container。</p> <pre><code class="prism language-bash">docker<span class="token function">kill</span><span class="token variable"><span class="token variable">$(</span>docker<span class="token function">ps</span><span class="token operator">|</span><span class="token function">grep</span> kube-apiserver<span class="token operator">|</span><span class="token function">grep</span> -v pause<span class="token operator">|</span><span class="token function">awk</span><span class="token string">'{print<span class="token variable">$1</span>}'</span><span class="token variable">)</span></span></code></pre> <p>最后一步，我们要同时将修改的 kubeadm 配置信息更新到对应的 configmap 中。</p> <pre><code class="prism language-bash">kubeadm config upload from-file --config kubeadm.yaml</code></pre> <p>第二种方式到这里就结束了，接下来就是在本地电脑执行<code>kubetcl get pods</code> 测试，会显示出内网集群上的 pods。</p> <p>参考链接：</p> <p>https://blog.scottlowe.org/2019/07/30/adding-a-name-to-kubernetes-api-server-certificate/</p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2260.htm">Mr.Alright&#8212;使用AndroidStudio断点调试安卓源码</a></p>
                                        <p>下一个：<a href="/html/category/article-2262.htm">C# 一个基于.NET Core3.1的开源项目帮你彻底搞懂WPF框架Prism</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7827.htm" title="宠物领养平台app小程序有哪些软件（宠物领养平台app小程序有哪些软件免费）">宠物领养平台app小程序有哪些软件（宠物领养平台app小程序有哪些软件免费）</a></li>
                        <li class="py-2"><a href="/html/category/article-7688.htm" title="莲藕菜干猪骨汤的做法(菜干猪骨汤的做法大全)">莲藕菜干猪骨汤的做法(菜干猪骨汤的做法大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-6860.htm" title="济南宠物领养微信群 济南宠物领养微信群号">济南宠物领养微信群 济南宠物领养微信群号</a></li>
                        <li class="py-2"><a href="/html/category/article-7965.htm" title="动物疫苗打几次最好呢（动物疫苗打一次管多长时间）">动物疫苗打几次最好呢（动物疫苗打一次管多长时间）</a></li>
                        <li class="py-2"><a href="/html/category/article-7780.htm" title="宠物粮食品牌前十名排行榜有哪些品种的狗（宠物粮种类）">宠物粮食品牌前十名排行榜有哪些品种的狗（宠物粮种类）</a></li>
                        <li class="py-2"><a href="/html/category/article-7918.htm" title="车载功放机什么牌子好(车载功放性价比高)">车载功放机什么牌子好(车载功放性价比高)</a></li>
                        <li class="py-2"><a href="/html/category/article-7228.htm" title="中国动物疫苗生产企业排名前十（国内动物疫苗生产企业有多少家）">中国动物疫苗生产企业排名前十（国内动物疫苗生产企业有多少家）</a></li>
                        <li class="py-2"><a href="/html/category/article-7090.htm" title="花鼠明星俱乐部（花鼠能长多大）">花鼠明星俱乐部（花鼠能长多大）</a></li>
                        <li class="py-2"><a href="/html/category/article-6815.htm" title="靳东个人资料简介简历（山楂树之恋演员）速看，">靳东个人资料简介简历（山楂树之恋演员）速看，</a></li>
                        <li class="py-2"><a href="/html/category/article-7735.htm" title="南京有没有领养宠物的地方啊最近（南京哪里可以领养宠物）">南京有没有领养宠物的地方啊最近（南京哪里可以领养宠物）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/addons/xcblog/img/pakistanaddress/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                <p class="m-0">Pakistan Address 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/addons/xcblog/js/frontend/pakistanaddress/bootstrap.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>